[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Java"
java_version = "1.8"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "dromara/disjob"
sha = "b5eb98544c8fc8fde39354d89a24f8d935b3ff20"
bench_version = 2

[run_info]
docker_image = "maven:3.8.6-jdk-8"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl disjob-worker -Dtest=CommandJobExecutorTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl disjob-worker -DtargetClasses=**.CommandJobExecutor  -DtargetTests=**.CommandJobExecutorTest  -DoutputFormats=XML"
coverage_report_path = "disjob-worker/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "disjob-worker/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0.0
original_coverage = 75.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = []
missed_lines = [ 57, 58, 65, 66, 67, 69, 73, 74, 75, 76, 77, 79, 80, 81, 82, 86, 87, 90, 91, 92,]

[input_info]
test_file_path = "disjob-worker/src/test/java/cn/ponfee/disjob/worker/executor/CommandJobExecutorTest.java"
focal_file_path = "disjob-worker/src/main/java/cn/ponfee/disjob/worker/executor/impl/CommandJobExecutor.java"
test_file_url = "https://github.com/dromara/disjob/blob/b5eb98544c8fc8fde39354d89a24f8d935b3ff20/disjob-worker/src/test/java/cn/ponfee/disjob/worker/executor/CommandJobExecutorTest.java"
focal_file_url = "https://github.com/dromara/disjob/blob/b5eb98544c8fc8fde39354d89a24f8d935b3ff20/disjob-worker/src/main/java/cn/ponfee/disjob/worker/executor/impl/CommandJobExecutor.java"
first_commit_date = "2024-08-04"
last_commit_date = "2025-03-22"
test_file_content = "/*\n * Copyright 2022-2024 Ponfee (http://www.ponfee.cn/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage cn.ponfee.disjob.worker.executor;\n\nimport cn.ponfee.disjob.common.date.Dates;\nimport cn.ponfee.disjob.common.util.Jsons;\nimport cn.ponfee.disjob.worker.executor.impl.CommandJobExecutor;\nimport cn.ponfee.disjob.worker.util.ProcessUtils;\nimport org.apache.commons.lang3.SystemUtils;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Date;\n\n/**\n * @author Ponfee\n */\npublic class CommandJobExecutorTest {\n\n    @Test\n    public void testProcess() {\n        Assertions.assertTrue(ProcessUtils.getCurrentJvmProcessId() > 0);\n    }\n\n\n}\n"
