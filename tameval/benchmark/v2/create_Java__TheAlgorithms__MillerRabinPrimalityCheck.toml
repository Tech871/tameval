[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Java"
java_version = "21"
java_builder = "Maven"
is_multi_module = false

[repo_info]
repository = "TheAlgorithms/Java"
sha = "45148874e841c3b0db0a5a0d46e2871f30b0d3e0"

[run_info]
docker_image = "maven:3-amazoncorretto-21"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -Dtest=MillerRabinPrimalityCheckTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -DtargetClasses=**.MillerRabinPrimalityCheck  -DtargetTests=**.MillerRabinPrimalityCheckTest  -DoutputFormats=XML"
coverage_report_path = "target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 94.0
original_coverage = 94.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 22, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 62, 77, 78, 79, 81, 82, 83, 84, 87, 91, 93, 95, 98, 100, 101, 105, 106, 108, 112, 113, 114, 115, 116, 117, 118,]
missed_lines = [ 23, 36, 96,]

[input_info]
test_file_path = "src/test/java/com/thealgorithms/maths/prime/MillerRabinPrimalityCheckTest.java"
focal_file_path = "src/main/java/com/thealgorithms/maths/Prime/MillerRabinPrimalityCheck.java"
test_file_url = "https://github.com/TheAlgorithms/Java/blob/45148874e841c3b0db0a5a0d46e2871f30b0d3e0/src/test/java/com/thealgorithms/maths/prime/MillerRabinPrimalityCheckTest.java"
focal_file_url = "https://github.com/TheAlgorithms/Java/blob/45148874e841c3b0db0a5a0d46e2871f30b0d3e0/src/main/java/com/thealgorithms/maths/Prime/MillerRabinPrimalityCheck.java"
first_commit_date = "2025-01-27"
last_commit_date = "2025-01-27"
test_file_content = "package com.thealgorithms.maths.prime;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport com.thealgorithms.maths.Prime.MillerRabinPrimalityCheck;\nimport org.junit.jupiter.api.Test;\n\nclass MillerRabinPrimalityCheckTest {\n    @Test\n    void testDeterministicMillerRabinForPrimes() {\n        assertTrue(MillerRabinPrimalityCheck.deterministicMillerRabin(2));\n        assertTrue(MillerRabinPrimalityCheck.deterministicMillerRabin(37));\n        assertTrue(MillerRabinPrimalityCheck.deterministicMillerRabin(123457));\n        assertTrue(MillerRabinPrimalityCheck.deterministicMillerRabin(6472601713L));\n    }\n    @Test\n    void testDeterministicMillerRabinForNotPrimes() {\n        assertFalse(MillerRabinPrimalityCheck.deterministicMillerRabin(1));\n        assertFalse(MillerRabinPrimalityCheck.deterministicMillerRabin(35));\n        assertFalse(MillerRabinPrimalityCheck.deterministicMillerRabin(123453));\n        assertFalse(MillerRabinPrimalityCheck.deterministicMillerRabin(647260175));\n    }\n    @Test\n    void testMillerRabinForPrimes() {\n        assertTrue(MillerRabinPrimalityCheck.millerRabin(11, 5));\n        assertTrue(MillerRabinPrimalityCheck.millerRabin(97, 5));\n        assertTrue(MillerRabinPrimalityCheck.millerRabin(6720589, 5));\n        assertTrue(MillerRabinPrimalityCheck.millerRabin(9549401549L, 5));\n    }\n}\n"
