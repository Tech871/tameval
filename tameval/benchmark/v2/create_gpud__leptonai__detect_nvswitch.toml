[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.24.5"

[repo_info]
repository = "leptonai/gpud"
sha = "ae7fd28ecd1461a1ddf146b809a159ee1af94a34"
bench_version = 2

[run_info]
docker_image = "golang:1.24.5"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out pkg/nvidia-query/detect_nvswitch.go pkg/nvidia-query/detect_nvswitch_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting pkg/nvidia-query/detect_nvswitch.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 37.0
original_coverage = 53.0
mutation_kill_rate = 21.0
original_mutation_kill_rate = 29.0
covered_lines = [ 18, 19, 24, 25, 26, 27, 35, 41, 42, 43, 44, 45, 46, 58,]
missed_lines = [ 12, 13, 14, 20, 21, 22, 28, 29, 30, 32, 33, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 55, 56, 57,]

[input_info]
test_file_path = "pkg/nvidia-query/detect_nvswitch_test.go"
focal_file_path = "pkg/nvidia-query/detect_nvswitch.go"
test_file_url = "https://github.com/leptonai/gpud/blob/ae7fd28ecd1461a1ddf146b809a159ee1af94a34/pkg/nvidia-query/detect_nvswitch_test.go"
focal_file_url = "https://github.com/leptonai/gpud/blob/ae7fd28ecd1461a1ddf146b809a159ee1af94a34/pkg/nvidia-query/detect_nvswitch.go"
first_commit_date = "2025-06-06"
last_commit_date = "2025-06-06"
test_file_content = "package query\n\nimport (\n\t\"context\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_countSMINVSwitches_A10(t *testing.T) {\n\tctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n\tdefer cancel()\n\n\tcommand := \"cat ./testdata/nvidia-smi.nvlink.status.a10\"\n\n\tlines, err := countSMINVSwitches(ctx, command)\n\trequire.NoError(t, err)\n\trequire.Equal(t, 0, len(lines))\n}\n"
