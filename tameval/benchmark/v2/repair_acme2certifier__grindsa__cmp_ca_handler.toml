[meta]
task = "repair"
scenario = "repair_missed_asserts"

[lang_info]
lang = "Python"
python_cfg_file = "requirements.txt"

[repo_info]
repository = "grindsa/acme2certifier"
sha = "8f9485d611c4f4f183b556a182a1befeb63b0517"

[run_info]
docker_image = "python:3"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "pip install -r requirements.txt && (pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=examples/ca_handler/cmp_ca_handler.py -m pytest -q --junit-xml=test_output.xml test/test_cmp_ca_handler.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target examples.ca_handler.cmp_ca_handler --unit-test test.test_cmp_ca_handler --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target examples/ca_handler/cmp_ca_handler.py --unit-test test/test_cmp_ca_handler.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 0
original_coverage = 100.0
mutation_kill_rate = 0
original_mutation_kill_rate = 9.0
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "test/test_cmp_ca_handler.py"
focal_file_path = "examples/ca_handler/cmp_ca_handler.py"
test_file_url = "https://github.com/grindsa/acme2certifier/blob/8f9485d611c4f4f183b556a182a1befeb63b0517/test/test_cmp_ca_handler.py"
focal_file_url = "https://github.com/grindsa/acme2certifier/blob/8f9485d611c4f4f183b556a182a1befeb63b0517/examples/ca_handler/cmp_ca_handler.py"
first_commit_date = "2021-06-13"
last_commit_date = "2025-05-22"
test_file_content = "\nimport sys\nimport os\nimport unittest\nfrom unittest.mock import patch, mock_open, Mock\nimport shutil\nimport configparser\n\nsys.path.insert(0, \".\")\nsys.path.insert(1, \"..\")\n\n\nclass TestACMEHandler(unittest.TestCase):\n\n    def setUp(self):\n        import logging\n        from examples.ca_handler.cmp_ca_handler import CAhandler\n\n        logging.basicConfig(level=logging.CRITICAL)\n        self.logger = logging.getLogger(\"test_a2c\")\n        self.cahandler = CAhandler(False, self.logger)\n\n    def tearDown(self):\n        pass\n\n    def test_001_default(self):\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_002_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_003_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"foo\": \"bar\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_004_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_cmd\": \"foo\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"foo\", \"popo\": 0}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_005_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_popo\": \"pop\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": \"pop\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_006_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_cmd\": \"foo\", \"cmp_popo\": \"popo\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"foo\", \"popo\": \"popo\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_007_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_openssl_bin\": \"foo\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_008_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_recipient\": \"foo\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0, \"recipient\": \"/foo\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_009_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_recipient\": \"/foo\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0, \"recipient\": \"/foo\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_010_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_recipient\": \"fo,o\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0, \"recipient\": \"/fo/o\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_011_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_recipient\": \"fo, o\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0, \"recipient\": \"/fo/o\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_012_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_recipient\": \"foo, bar,doo\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0, \"recipient\": \"/foo/bar/doo\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_013_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_recipient\": \"foo, bar, doo,bar,doo\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"popo\": 0, \"recipient\": \"/foo/bar/doo/bar/doo\"}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_014_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_foo\": \"bar\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"foo\": \"bar\", \"popo\": 0}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_015_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_foo\": \"1\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"foo\": \"1\", \"popo\": 0}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_016_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_foo\": 0.1}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n        odict = {\"cmd\": \"ir\", \"foo\": \"0.1\", \"popo\": 0}\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_017_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"foo\": \"bar\"}\n        mock_load_cfg.return_value = parser\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n            self.cahandler._config_load()\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_018_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"foo\": \"bar\"}\n        mock_load_cfg.return_value = parser\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n            self.cahandler._config_load()\n\n    @patch.dict(\"os.environ\", {\"cmp_ref\": \"cmp_ref\"})\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_019_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_ref_variable\": \"cmp_ref\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n\n    @patch.dict(\"os.environ\", {\"cmp_ref\": \"user_var\"})\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_020_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_ref_variable\": \"does_not_exist\"}\n        mock_load_cfg.return_value = parser\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n            self.cahandler._config_load()\n\n    @patch.dict(\"os.environ\", {\"cmp_ref\": \"cmp_ref\"})\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_021_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\n            \"cmp_ref_variable\": \"cmp_ref\",\n            \"cmp_ref\": \"cmp_ref_local\",\n        }\n        mock_load_cfg.return_value = parser\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n            self.cahandler._config_load()\n\n    @patch.dict(\"os.environ\", {\"cmp_secret\": \"cmp_secret\"})\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_022_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_secret_variable\": \"cmp_secret\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n\n    @patch.dict(\"os.environ\", {\"cmp_secret\": \"cmp_secret\"})\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_023_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_secret_variable\": \"does_not_exist\"}\n        mock_load_cfg.return_value = parser\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n            self.cahandler._config_load()\n\n    @patch.dict(\"os.environ\", {\"cmp_secret\": \"cmp_secret\"})\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_024_config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\n            \"cmp_secret_variable\": \"cmp_secret\",\n            \"cmp_secret\": \"cmp_secret_local\",\n        }\n        mock_load_cfg.return_value = parser\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n            self.cahandler._config_load()\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_025__config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_bool\": \"True\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.load_config\")\n    def test_026__config_load(self, mock_load_cfg):\n        parser = configparser.ConfigParser()\n        parser[\"CAhandler\"] = {\"cmp_bool\": \"False\"}\n        mock_load_cfg.return_value = parser\n        self.cahandler._config_load()\n\n    def test_027_poll(self):\n\n    def test_028_trigger(self):\n\n    def test_029_revoke(self):\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._config_load\")\n    def test_030__enter__(self, mock_load):\n        self.cahandler.__enter__()\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._config_load\")\n    def test_031__enter__(self, mock_load):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.__enter__()\n\n    @patch(\"shutil.rmtree\")\n    @patch(\"os.path.exists\")\n    def test_032_tmp_dir_delete(self, mock_exists, mock_remove):\n        mock_exists.return_value = True\n        self.cahandler._tmp_dir_delete()\n\n    @patch(\"shutil.rmtree\")\n    @patch(\"os.path.exists\")\n    def test_033_tmp_dir_delete(self, mock_exists, mock_remove):\n        mock_exists.return_value = False\n        self.cahandler._tmp_dir_delete()\n\n    @patch(\"builtins.open\", mock_open(read_data=\"foo\"), create=True)\n    @patch(\"os.path.isfile\")\n    def test_034_certs_bundle(self, mock_exists):\n        mock_exists.return_value = False\n\n    @patch(\"builtins.open\", mock_open(read_data=\"foo\"), create=True)\n    @patch(\"os.path.isfile\")\n    def test_035_certs_bundle(self, mock_exists):\n        mock_exists.return_value = False\n\n    @patch(\"builtins.open\", mock_open(read_data=\"foo\"), create=True)\n    @patch(\"os.path.isfile\")\n    def test_036_certs_bundle(self, mock_exists):\n        mock_exists.side_effect = (True, False)\n\n    @patch(\"builtins.open\", mock_open(read_data=\"foo\"), create=True)\n    @patch(\"os.path.isfile\")\n    def test_037_certs_bundle(self, mock_exists):\n        mock_exists.side_effect = (False, True)\n\n    @patch(\"builtins.open\", mock_open(read_data=\"foo\"), create=True)\n    @patch(\"os.path.isfile\")\n    def test_038_certs_bundle(self, mock_exists):\n        mock_exists.side_effect = (True, True)\n\n    @patch(\n        \"builtins.open\",\n        mock_open(read_data=\"-----BEGIN CERTIFICATE-----\\nfoo\"),\n        create=True,\n    )\n    @patch(\"os.path.isfile\")\n    def test_039_certs_bundle(self, mock_exists):\n        mock_exists.side_effect = (False, True)\n\n    @patch(\n        \"builtins.open\",\n        mock_open(\n            read_data=\"-----BEGIN CERTIFICATE-----\\nfoo-----END CERTIFICATE-----\\n\"\n        ),\n        create=True,\n    )\n    @patch(\"os.path.isfile\")\n    def test_040_certs_bundle(self, mock_exists):\n        mock_exists.side_effect = (False, True)\n\n    @patch(\"builtins.open\", mock_open(read_data=\"foo\\n\"), create=True)\n    @patch(\"os.path.isfile\")\n    def test_041_certs_bundle(self, mock_exists):\n        mock_exists.side_effect = (False, True)\n\n    def test_042_opensslcmd_build(self):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.tmp_dir = \"/tmp\"\n        self.cahandler.ca_pubs_file = \"/tmp/capubs.pem\"\n        self.cahandler.cert_file = \"/tmp/cert.pem\"\n        result = [\n            \"openssl_bin\",\n            \"cmp\",\n            \"-csr\",\n            \"/tmp/csr.pem\",\n            \"-extracertsout\",\n            \"/tmp/capubs.pem\",\n            \"-certout\",\n            \"/tmp/cert.pem\",\n            \"-msg_timeout\",\n            \"5\",\n            \"-total_timeout\",\n            \"10\",\n        ]\n\n    def test_043_opensslcmd_build(self):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.tmp_dir = \"/tmp\"\n        self.cahandler.ca_pubs_file = \"/tmp/capubs.pem\"\n        self.cahandler.cert_file = \"/tmp/cert.pem\"\n        self.cahandler.config_dic = {\"foo1\": \"bar1\", \"foo2\": \"bar2\"}\n        result = [\n            \"openssl_bin\",\n            \"cmp\",\n            \"-foo1\",\n            \"bar1\",\n            \"-foo2\",\n            \"bar2\",\n            \"-csr\",\n            \"/tmp/csr.pem\",\n            \"-extracertsout\",\n            \"/tmp/capubs.pem\",\n            \"-certout\",\n            \"/tmp/cert.pem\",\n            \"-msg_timeout\",\n            \"5\",\n            \"-total_timeout\",\n            \"10\",\n        ]\n\n    def test_044_opensslcmd_build(self):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.tmp_dir = \"/tmp\"\n        self.cahandler.ca_pubs_file = \"/tmp/capubs.pem\"\n        self.cahandler.cert_file = \"/tmp/cert.pem\"\n        self.cahandler.config_dic = {\"msg_timeout\": 10}\n        result = [\n            \"openssl_bin\",\n            \"cmp\",\n            \"-msg_timeout\",\n            \"10\",\n            \"-csr\",\n            \"/tmp/csr.pem\",\n            \"-extracertsout\",\n            \"/tmp/capubs.pem\",\n            \"-certout\",\n            \"/tmp/cert.pem\",\n            \"-total_timeout\",\n            \"10\",\n        ]\n\n    def test_045_opensslcmd_build(self):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.tmp_dir = \"/tmp\"\n        self.cahandler.config_dic = {\"total_timeout\": 20}\n        self.cahandler.ca_pubs_file = \"/tmp/capubs.pem\"\n        self.cahandler.cert_file = \"/tmp/cert.pem\"\n        result = [\n            \"openssl_bin\",\n            \"cmp\",\n            \"-total_timeout\",\n            \"20\",\n            \"-csr\",\n            \"/tmp/csr.pem\",\n            \"-extracertsout\",\n            \"/tmp/capubs.pem\",\n            \"-certout\",\n            \"/tmp/cert.pem\",\n            \"-msg_timeout\",\n            \"5\",\n        ]\n\n    def test_046_opensslcmd_build(self):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.secret = \"secret\"\n        self.cahandler.tmp_dir = \"/tmp\"\n        self.cahandler.ca_pubs_file = \"/tmp/capubs.pem\"\n        self.cahandler.cert_file = \"/tmp/cert.pem\"\n        self.cahandler.config_dic = {\"total_timeout\": 20}\n        result = [\n            \"openssl_bin\",\n            \"cmp\",\n            \"-total_timeout\",\n            \"20\",\n            \"-csr\",\n            \"/tmp/csr.pem\",\n            \"-extracertsout\",\n            \"/tmp/capubs.pem\",\n            \"-certout\",\n            \"/tmp/cert.pem\",\n            \"-msg_timeout\",\n            \"5\",\n        ]\n\n    def test_047_opensslcmd_build(self):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.ref = \"ref\"\n        self.cahandler.tmp_dir = \"/tmp\"\n        self.cahandler.ca_pubs_file = \"/tmp/capubs.pem\"\n        self.cahandler.cert_file = \"/tmp/cert.pem\"\n        self.cahandler.config_dic = {\"total_timeout\": 20}\n        result = [\n            \"openssl_bin\",\n            \"cmp\",\n            \"-total_timeout\",\n            \"20\",\n            \"-csr\",\n            \"/tmp/csr.pem\",\n            \"-extracertsout\",\n            \"/tmp/capubs.pem\",\n            \"-certout\",\n            \"/tmp/cert.pem\",\n            \"-msg_timeout\",\n            \"5\",\n        ]\n\n    def test_048_opensslcmd_build(self):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        self.cahandler.ref = \"ref\"\n        self.cahandler.secret = \"secret\"\n        self.cahandler.tmp_dir = \"/tmp\"\n        self.cahandler.ca_pubs_file = \"/tmp/capubs.pem\"\n        self.cahandler.cert_file = \"/tmp/cert.pem\"\n        self.cahandler.config_dic = {\"total_timeout\": 20}\n        result = [\n            \"openssl_bin\",\n            \"cmp\",\n            \"-total_timeout\",\n            \"20\",\n            \"-csr\",\n            \"/tmp/csr.pem\",\n            \"-extracertsout\",\n            \"/tmp/capubs.pem\",\n            \"-certout\",\n            \"/tmp/cert.pem\",\n            \"-msg_timeout\",\n            \"5\",\n            \"-ref\",\n            \"ref\",\n            \"-secret\",\n            \"secret\",\n        ]\n\n    def test_049_enroll(self):\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.allowed_domainlist_check\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._certs_bundle\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._tmp_dir_delete\")\n    @patch(\"os.path.isfile\")\n    @patch(\"subprocess.call\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._opensslcmd_build\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._file_save\")\n    def test_050_enroll(\n        self,\n        mock_save,\n        mock_build,\n        mock_call,\n        mock_exists,\n        mock_del,\n        mock_bundle,\n        mock_adl,\n    ):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        mock_save.return_value = True\n        mock_build.return_value = \"opensslcmd\"\n        mock_call.return_value = 0\n        mock_exists.return_value = True\n        mock_bundle.return_value = (\"cert_bundle\", \"cert_raw\")\n        mock_del.return_value = True\n        mock_adl.return_value = None\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.allowed_domainlist_check\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._certs_bundle\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._tmp_dir_delete\")\n    @patch(\"os.path.isfile\")\n    @patch(\"subprocess.call\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._opensslcmd_build\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._file_save\")\n    def test_051_enroll(\n        self,\n        mock_save,\n        mock_build,\n        mock_call,\n        mock_exists,\n        mock_del,\n        mock_bundle,\n        mock_adl,\n    ):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        mock_save.return_value = True\n        mock_build.return_value = \"opensslcmd\"\n        mock_call.return_value = 0\n        mock_exists.return_value = True\n        mock_bundle.return_value = (\"cert_bundle\", \"cert_raw\")\n        mock_del.return_value = True\n        mock_adl.return_value = \"mock_adl\"\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._certs_bundle\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._tmp_dir_delete\")\n    @patch(\"os.path.isfile\")\n    @patch(\"subprocess.call\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._opensslcmd_build\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._file_save\")\n    def test_052_enroll(\n        self, mock_save, mock_build, mock_call, mock_exists, mock_del, mock_bundle\n    ):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        mock_save.return_value = True\n        mock_build.return_value = \"opensslcmd\"\n        mock_call.return_value = 25\n        mock_exists.return_value = True\n        mock_bundle.return_value = (\"cert_bundle\", \"cert_raw\")\n        mock_del.return_value = True\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._certs_bundle\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._tmp_dir_delete\")\n    @patch(\"os.path.isfile\")\n    @patch(\"subprocess.call\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._opensslcmd_build\")\n    @patch(\"examples.ca_handler.cmp_ca_handler.CAhandler._file_save\")\n    def test_053_enroll(\n        self, mock_save, mock_build, mock_call, mock_exists, mock_del, mock_bundle\n    ):\n        self.cahandler.openssl_bin = \"openssl_bin\"\n        mock_save.return_value = True\n        mock_build.return_value = \"opensslcmd\"\n        mock_call.return_value = 25\n        mock_exists.return_value = False\n        mock_bundle.return_value = (\"cert_bundle\", \"cert_raw\")\n        mock_del.return_value = True\n        with self.assertLogs(\"test_a2c\", level=\"INFO\") as lcm:\n\n    @patch(\"builtins.open\")\n    def test_054__file_save(self, mock_op):\n\n\nif __name__ == \"__main__\":\n\n    unittest.main()"
