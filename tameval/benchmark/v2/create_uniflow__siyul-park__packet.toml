[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Go"
go_version = "1.24.4"

[repo_info]
repository = "siyul-park/uniflow"
sha = "9a8c580db91d1ea6f709f700a463153d8aedf829"

[run_info]
docker_image = "golang:1.24.4"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out pkg/packet/packet.go pkg/packet/packet_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting pkg/packet/packet.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 81.0
original_coverage = 81.0
mutation_kill_rate = 63.0
original_mutation_kill_rate = 63.0
covered_lines = [ 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71,]
missed_lines = [ 38, 39, 45, 46, 49, 50, 51,]

[input_info]
test_file_path = "pkg/packet/packet_test.go"
focal_file_path = "pkg/packet/packet.go"
test_file_url = "https://github.com/siyul-park/uniflow/blob/9a8c580db91d1ea6f709f700a463153d8aedf829/pkg/packet/packet_test.go"
focal_file_url = "https://github.com/siyul-park/uniflow/blob/9a8c580db91d1ea6f709f700a463153d8aedf829/pkg/packet/packet.go"
first_commit_date = "2023-11-20"
last_commit_date = "2025-04-26"
test_file_content = "package packet\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/require\"\n\n\t\"github.com/siyul-park/uniflow/pkg/types\"\n)\n\nfunc TestNew(t *testing.T) {\n\tpck := New(nil)\n\trequire.NotZero(t, pck.ID())\n\trequire.NotNil(t, pck)\n}\n\nfunc TestJoin(t *testing.T) {\n\tt.Run(\"None\", func(t *testing.T) {\n\t\tres := Join(None, None)\n\t\trequire.Equal(t, None, res)\n\t})\n\n\tt.Run(\"Zero\", func(t *testing.T) {\n\t\tres := Join()\n\t\trequire.Equal(t, None, res)\n\t})\n\n\tt.Run(\"One\", func(t *testing.T) {\n\t\tpck := New(nil)\n\t\tres := Join(pck)\n\t\trequire.Equal(t, pck, res)\n\t})\n\n\tt.Run(\"Many\", func(t *testing.T) {\n\t\tpck1 := New(nil)\n\t\tpck2 := New(nil)\n\t\tres := Join(pck1, pck2)\n\t\trequire.Equal(t, types.NewSlice(nil, nil), res.Payload())\n\t})\n}\n"
