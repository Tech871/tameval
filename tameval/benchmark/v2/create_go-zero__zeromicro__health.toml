[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.21"

[repo_info]
repository = "zeromicro/go-zero"
sha = "6edfce63e396883d83ee74ceba2e0d9d11f0626d"

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out internal/health/health.go internal/health/health_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting internal/health/health.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 23.0
original_coverage = 100.0
mutation_kill_rate = 16.0
original_mutation_kill_rate = 84.0
covered_lines = [ 58, 59, 60, 61, 62, 65, 66, 67, 70, 71, 72, 75, 76, 77, 84, 85, 86,]
missed_lines = [ 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 80, 81, 82, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 143, 144, 145, 146, 147, 148,]

[input_info]
test_file_path = "internal/health/health_test.go"
focal_file_path = "internal/health/health.go"
test_file_url = "https://github.com/zeromicro/go-zero/blob/6edfce63e396883d83ee74ceba2e0d9d11f0626d/internal/health/health_test.go"
focal_file_url = "https://github.com/zeromicro/go-zero/blob/6edfce63e396883d83ee74ceba2e0d9d11f0626d/internal/health/health.go"
first_commit_date = "2022-12-10"
last_commit_date = "2025-01-22"
test_file_content = "package health\n\nimport (\n\t\"sync\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nconst probeName = \"probe\"\n\nfunc TestHealthManager(t *testing.T) {\n\thm := NewHealthManager(probeName)\n\tassert.False(t, hm.IsReady())\n\n\thm.MarkReady()\n\tassert.True(t, hm.IsReady())\n\n\thm.MarkNotReady()\n\tassert.False(t, hm.IsReady())\n\n\tt.Run(\"concurrent should works\", func(t *testing.T) {\n\t\tvar wg sync.WaitGroup\n\t\twg.Add(10)\n\t\tfor i := 0; i < 10; i++ {\n\t\t\tgo func() {\n\t\t\t\thm.MarkReady()\n\t\t\t\twg.Done()\n\t\t\t}()\n\t\t}\n\t\twg.Wait()\n\t\tassert.True(t, hm.IsReady())\n\t})\n}\n\n\n\n\nfunc cleanupForTest(t *testing.T) {\n\tt.Cleanup(func() {\n\t\tdefaultHealthManager = &comboHealthManager{}\n\t})\n}\n"
