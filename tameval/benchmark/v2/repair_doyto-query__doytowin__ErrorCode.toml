[meta]
task = "repair"
scenario = "repair_invalid_call"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "doytowin/doyto-query"
sha = "27754a721c6c437edcb2a8936d4c4a6212125d03"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl doyto-query-web-common -Dtest=ErrorCodeTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl doyto-query-web-common -DtargetClasses=**.ErrorCode  -DtargetTests=**.ErrorCodeTest  -DoutputFormats=XML"
coverage_report_path = "doyto-query-web-common/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "doyto-query-web-common/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0.0
original_coverage = 88.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "doyto-query-web-common/src/test/java/win/doyto/query/web/response/ErrorCodeTest.java"
focal_file_path = "doyto-query-web-common/src/main/java/win/doyto/query/web/response/ErrorCode.java"
test_file_url = "https://github.com/doytowin/doyto-query/blob/27754a721c6c437edcb2a8936d4c4a6212125d03/doyto-query-web-common/src/test/java/win/doyto/query/web/response/ErrorCodeTest.java"
focal_file_url = "https://github.com/doytowin/doyto-query/blob/27754a721c6c437edcb2a8936d4c4a6212125d03/doyto-query-web-common/src/main/java/win/doyto/query/web/response/ErrorCode.java"
first_commit_date = "2022-04-06"
last_commit_date = "2025-03-07"
test_file_content = "\n\npackage win.doyto.query.web.response;\n\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ErrorCodeTest {\n\n    private ErrorCode failCode = ErrorCode.build(\"fail\");\n\n    @Test\n    void testAssertTrue() {\n        ErrorCode.assertTrue(true, failCode);\n\n        try {\n            ErrorCode.assertTrue(false, failCode);\n            fail();\n        } catch (ErrorCodeException e) {\n            assertFalse(e.getErrorCode().isSuccess());\n            assertEquals(-1, ErrorCode.build(e.getErrorCode()).getCode());\n        }\n    }\n\n    @Test\n    void assertNotNull() {\n        ErrorCode.assertNotNull(\"ok\", failCode);\n\n        try {\n            ErrorCode.assertNotNull(null, failCode);\n            fail();\n        } catch (ErrorCodeException e) {\n            assertFalse(e.getErrorCode().isSuccess());\n        }\n    }\n\n    @Test\n    void testInvalidCalls() {\n        ErrorCode errorCode = new JsonResponse<>();\n        errorCode.setInvalidArgument(123);\n        ErrorCode.fail(failCode, \"extra\", \"arguments\", \"here\", \"and\", \"there\");\n        StringUtils.split(\"string\", 'c', 1, 2);\n    }\n}"
