[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = false

[repo_info]
repository = "f4b6a3/uuid-creator"
sha = "3f41c3e6ed9fa3c229303672960570281f35a125"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -Dtest=BaseNTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -DtargetClasses=**.BaseN  -DtargetTests=**.BaseNTest  -DoutputFormats=XML"
coverage_report_path = "target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 41.0
original_coverage = 91.0
mutation_kill_rate = 44.0
original_mutation_kill_rate = 86.0
covered_lines = [ 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 309, 311, 322, 323, 324, 326, 327, 329, 333, 334, 337, 341, 345, 346, 347, 349,]
missed_lines = [ 98, 99, 135, 138, 141, 142, 146, 149, 152, 155, 158, 161, 162, 170, 179, 188, 197, 206, 215, 225, 226, 228, 229, 230, 233, 243, 244, 246, 249, 250, 251, 257, 258, 261, 262, 263, 265, 266, 270, 274, 275, 277, 278, 280,]

[input_info]
test_file_path = "src/test/java/com/github/f4b6a3/uuid/codec/base/BaseNTest.java"
focal_file_path = "src/main/java/com/github/f4b6a3/uuid/codec/base/BaseN.java"
test_file_url = "https://github.com/f4b6a3/uuid-creator/blob/3f41c3e6ed9fa3c229303672960570281f35a125/src/test/java/com/github/f4b6a3/uuid/codec/base/BaseNTest.java"
focal_file_url = "https://github.com/f4b6a3/uuid-creator/blob/3f41c3e6ed9fa3c229303672960570281f35a125/src/main/java/com/github/f4b6a3/uuid/codec/base/BaseN.java"
first_commit_date = "2020-12-20"
last_commit_date = "2025-03-29"
test_file_content = "package com.github.f4b6a3.uuid.codec.base;\n\nimport static org.junit.Assert.*;\n\nimport java.util.UUID;\n\nimport org.junit.Test;\n\npublic class BaseNTest {\n\n\t@Test\n\tpublic void testExpand() {\n\t\tassertEquals(\"\", BaseN.expand(\"\"));\n\t\tassertEquals(\"0\", BaseN.expand(\"0\"));\n\t\tassertEquals(\"a\", BaseN.expand(\"a\"));\n\t\tassertEquals(\"A\", BaseN.expand(\"A\"));\n\t\tassertEquals(\"-\", BaseN.expand(\"-\"));\n\t\tassertEquals(\"--\", BaseN.expand(\"--\"));\n\t\tassertEquals(\"-x-\", BaseN.expand(\"-x-\"));\n\t\tassertEquals(\"-x-\", BaseN.expand(\"-x-x-\"));\n\t\tassertEquals(\"-x-x-\", BaseN.expand(\"-x-x-x-\"));\n\t\tassertEquals(\"-x-x-\", BaseN.expand(\"-x-x-x-x-\"));\n\t\tassertEquals(\"abc123\", BaseN.expand(\"abc123\"));\n\t\tassertEquals(\"00400\", BaseN.expand(\"004-400\"));\n\t\tassertEquals(\"aaxyaa\", BaseN.expand(\"aax-yaa\"));\n\t\tassertEquals(\"-abcdef\", BaseN.expand(\"-abcdef\"));\n\t\tassertEquals(\"abcdef-\", BaseN.expand(\"abcdef-\"));\n\t\tassertEquals(\"0123-_\", BaseN.expand(\"0123-_\"));\n\t\tassertEquals(\"_-0123\", BaseN.expand(\"_-0123\"));\n\t\tassertEquals(\"abcd-_\", BaseN.expand(\"abcd-_\"));\n\t\tassertEquals(\"abcd-_\", BaseN.expand(\"abcd-_\"));\n\t\tassertEquals(\"123789\", BaseN.expand(\"1-37-9\"));\n\t\tassertEquals(\"abcopq\", BaseN.expand(\"a-co-q\"));\n\t\tassertEquals(\"ABCOPQ\", BaseN.expand(\"A-CO-Q\"));\n\t\tassertEquals(\"-123789-\", BaseN.expand(\"-1-37-9-\"));\n\t\tassertEquals(\"-abcopq-\", BaseN.expand(\"-a-co-q-\"));\n\t\tassertEquals(\"-ABCOPQ-\", BaseN.expand(\"-A-CO-Q-\"));\n\t\tassertEquals(\"123-789\", BaseN.expand(\"1-3-7-9\"));\n\t\tassertEquals(\"abc-opq\", BaseN.expand(\"a-c-o-q\"));\n\t\tassertEquals(\"ABC-OPQ\", BaseN.expand(\"A-C-O-Q\"));\n\t\tassertEquals(\"-123-789-\", BaseN.expand(\"-1-3-7-9-\"));\n\t\tassertEquals(\"-abc-opq-\", BaseN.expand(\"-a-c-o-q-\"));\n\t\tassertEquals(\"-ABC-OPQ-\", BaseN.expand(\"-A-C-O-Q-\"));\n\t}\n\n\n\n\n\n\n\n}\n"
