[meta]
task = "update"
scenario = "update_test"

[lang_info]
lang = "Go"
go_version = "1.23.7"

[repo_info]
repository = "leptonai/gpud"
sha = "1763d902486568b8db164ef3f832841ede2fd8de"
bench_version = 2

[run_info]
docker_image = "golang:1.23.7"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out pkg/file/library.go pkg/file/library_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting pkg/file/library.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 10.0
original_coverage = 89.0
mutation_kill_rate = 89.0
original_mutation_kill_rate = 67.0
covered_lines = [ 14, 15, 16, 17, 18, 30, 34, 35, 36,]
missed_lines = [ 20, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,]

[input_info]
test_file_path = "pkg/file/library_test.go"
focal_file_path = "pkg/file/library.go"
test_file_url = "https://github.com/leptonai/gpud/blob/1763d902486568b8db164ef3f832841ede2fd8de/pkg/file/library_test.go"
focal_file_url = "https://github.com/leptonai/gpud/blob/1763d902486568b8db164ef3f832841ede2fd8de/pkg/file/library.go"
first_commit_date = "2024-10-15"
last_commit_date = "2025-02-14"
test_file_content = "package file\n\nimport (\n\t\"testing\"\n)\n\nfunc TestFindLibrary(t *testing.T) {\n\t_, err := FindLibrary(\"\")\n\tif err != ErrLibraryEmpty {\n\t\tt.Errorf(\"FindLibrary() error = %v, want %v\", err, ErrLibraryEmpty)\n\t}\n}"
