[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.23.0"

[repo_info]
repository = "splunk/qbec"
sha = "57f20857bab8d25c968757a7e07bd83847c97e7b"

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out internal/cmd/errors.go internal/cmd/errors_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting internal/cmd/errors.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 45.0
original_coverage = 90.0
mutation_kill_rate = 0.0
original_mutation_kill_rate = 100.0
covered_lines = [ 31, 32, 33, 34, 42, 43, 44, 45, 46, 54, 55, 56, 57,]
missed_lines = [ 24, 25, 26, 27, 28, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67,]

[input_info]
test_file_path = "internal/cmd/errors_test.go"
focal_file_path = "internal/cmd/errors.go"
test_file_url = "https://github.com/splunk/qbec/blob/57f20857bab8d25c968757a7e07bd83847c97e7b/internal/cmd/errors_test.go"
focal_file_url = "https://github.com/splunk/qbec/blob/57f20857bab8d25c968757a7e07bd83847c97e7b/internal/cmd/errors.go"
first_commit_date = "2021-02-05"
last_commit_date = "2025-04-14"
test_file_content = "// Copyright 2025 Splunk Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage cmd\n\nimport (\n\t\"errors\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\n\nfunc TestRuntimeError(t *testing.T) {\n\tre := NewRuntimeError(errors.New(\"foobar\"))\n\ta := assert.New(t)\n\ta.True(IsRuntimeError(re))\n\ta.False(IsUsageError(re))\n\ta.Equal(\"foobar\", re.Error())\n}\n"
