[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Python"
python_version = "3.13"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "matthewwardrop/formulaic"
sha = "46eb1f26c79d3f999c12738cde6b11f875c7c9c8"

[run_info]
docker_image = "python:3.13"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "(pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=formulaic/transforms/hashed.py -m pytest -q --junit-xml=test_output.xml tests/transforms/test_hashed.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target formulaic.transforms.hashed --unit-test tests.transforms.test_hashed --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target formulaic/transforms/hashed.py --unit-test tests/transforms/test_hashed.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 86.0
original_coverage = 100.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 0, 2, 3, 4, 5, 7, 9, 11, 22, 52, 68, 70,]
missed_lines = [ 59, 60,]

[input_info]
test_file_path = "tests/transforms/test_hashed.py"
focal_file_path = "formulaic/transforms/hashed.py"
test_file_url = "https://github.com/matthewwardrop/formulaic/blob/46eb1f26c79d3f999c12738cde6b11f875c7c9c8/tests/transforms/test_hashed.py"
focal_file_url = "https://github.com/matthewwardrop/formulaic/blob/46eb1f26c79d3f999c12738cde6b11f875c7c9c8/formulaic/transforms/hashed.py"
first_commit_date = "2023-12-22"
last_commit_date = "2025-01-07"
test_file_content = "import numpy\nimport pandas as pd\nimport pytest\nimport scipy.sparse as spsparse\n\nfrom formulaic import model_matrix\nfrom formulaic.materializers import FactorValues\nfrom formulaic.transforms.hashed import hashed\n\ndef _compare_factor_values(a, b, comp=lambda x, y: numpy.allclose(x, y)):\n    assert type(a) is type(b)\n    if isinstance(a, spsparse.csc_matrix):\n        assert comp(\n            a.toarray(),\n            b,\n        )\n    else:\n        assert comp(a, b)\n\ndef test_basic_usage():\n    _compare_factor_values(\n        hashed([\"a\", \"b\", \"c\"], levels=10),\n        FactorValues(\n            numpy.array([7, 3, 3]),\n            kind=\"categorical\",\n            spans_intercept=False,\n            column_names=None,\n            drop_field=None,\n            format=\"{name}[{field}]\",\n            encoded=False,\n        ),\n    )\n"
