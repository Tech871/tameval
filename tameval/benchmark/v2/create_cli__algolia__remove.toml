[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.23.0"

[repo_info]
repository = "algolia/cli"
sha = "a9ed61086d651e010e3b7ab8c736464e72c4bb78"

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out pkg/cmd/profile/remove/remove.go pkg/cmd/profile/remove/remove_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting pkg/cmd/profile/remove/remove.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 53.0
original_coverage = 70.0
mutation_kill_rate = 56.0
original_mutation_kill_rate = 72.0
covered_lines = [ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 63, 64, 65, 67, 68, 69, 75, 76, 77, 78,]
missed_lines = [ 50, 51, 52, 60, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116,]

[input_info]
test_file_path = "pkg/cmd/profile/remove/remove_test.go"
focal_file_path = "pkg/cmd/profile/remove/remove.go"
test_file_url = "https://github.com/algolia/cli/blob/a9ed61086d651e010e3b7ab8c736464e72c4bb78/pkg/cmd/profile/remove/remove_test.go"
focal_file_url = "https://github.com/algolia/cli/blob/a9ed61086d651e010e3b7ab8c736464e72c4bb78/pkg/cmd/profile/remove/remove.go"
first_commit_date = "2022-08-03"
last_commit_date = "2025-03-18"
test_file_content = "package remove\n\nimport (\n\t\"testing\"\n\n\t\"github.com/algolia/cli/pkg/cmdutil\"\n\t\"github.com/algolia/cli/pkg/iostreams\"\n\t\"github.com/algolia/cli/test\"\n\t\"github.com/google/shlex\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestNewRemoveCmd(t *testing.T) {\n\ttests := []struct {\n\t\tname      string\n\t\ttty       bool\n\t\tcli       string\n\t\twantsErr  bool\n\t\twantsOpts RemoveOptions\n\t}{\n\t\t{\n\t\t\tname:     \"no --confirm without tty\",\n\t\t\tcli:      \"default\",\n\t\t\ttty:      false,\n\t\t\twantsErr: true,\n\t\t\twantsOpts: RemoveOptions{\n\t\t\t\tDoConfirm: true,\n\t\t\t\tProfile:   \"default\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:     \"--confirm without tty\",\n\t\t\tcli:      \"default --confirm\",\n\t\t\ttty:      false,\n\t\t\twantsErr: false,\n\t\t\twantsOpts: RemoveOptions{\n\t\t\t\tDoConfirm: false,\n\t\t\t\tProfile:   \"default\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname:     \"non-existant profile\",\n\t\t\tcli:      \"foo\",\n\t\t\ttty:      true,\n\t\t\twantsErr: true,\n\t\t\twantsOpts: RemoveOptions{\n\t\t\t\tDoConfirm: true,\n\t\t\t\tProfile:   \"foo\",\n\t\t\t},\n\t\t},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tio, _, _, _ := iostreams.Test()\n\t\t\tif tt.tty {\n\t\t\t\tio.SetStdinTTY(tt.tty)\n\t\t\t\tio.SetStdoutTTY(tt.tty)\n\t\t\t}\n\n\t\t\tf := &cmdutil.Factory{\n\t\t\t\tIOStreams: io,\n\t\t\t\tConfig:    test.NewDefaultConfigStub(),\n\t\t\t}\n\n\t\t\tvar opts *RemoveOptions\n\t\t\tcmd := NewRemoveCmd(f, func(o *RemoveOptions) error {\n\t\t\t\topts = o\n\t\t\t\treturn nil\n\t\t\t})\n\n\t\t\targs, err := shlex.Split(tt.cli)\n\t\t\trequire.NoError(t, err)\n\t\t\tcmd.SetArgs(args)\n\t\t\t_, err = cmd.ExecuteC()\n\t\t\tif tt.wantsErr {\n\t\t\t\tassert.Error(t, err)\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\trequire.NoError(t, err)\n\t\t\t}\n\n\t\t\tassert.Equal(t, tt.wantsOpts.Profile, opts.Profile)\n\t\t\tassert.Equal(t, tt.wantsOpts.DoConfirm, opts.DoConfirm)\n\t\t})\n\t}\n}\n"
