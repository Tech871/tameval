[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.22.5"

[repo_info]
repository = "ydb-platform/ydb-go-sdk"
sha = "6ecec32a4ff86f5a4f92e3d35aa1c1a4cf1b63d3"

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out internal/grpcwrapper/rawtopic/rawtopiccommon/server_message_metadata.go internal/grpcwrapper/rawtopic/rawtopiccommon/server_message_metadata_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting internal/grpcwrapper/rawtopic/rawtopiccommon/server_message_metadata.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 56.0
original_coverage = 56.0
mutation_kill_rate = 80.0
original_mutation_kill_rate = 80.0
covered_lines = [ 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 50, 51, 52, 54,]
missed_lines = [ 19, 20, 21, 22, 24, 27, 28, 29, 31, 32, 33,]

[input_info]
test_file_path = "internal/grpcwrapper/rawtopic/rawtopiccommon/server_message_metadata_test.go"
focal_file_path = "internal/grpcwrapper/rawtopic/rawtopiccommon/server_message_metadata.go"
test_file_url = "https://github.com/ydb-platform/ydb-go-sdk/blob/6ecec32a4ff86f5a4f92e3d35aa1c1a4cf1b63d3/internal/grpcwrapper/rawtopic/rawtopiccommon/server_message_metadata_test.go"
focal_file_url = "https://github.com/ydb-platform/ydb-go-sdk/blob/6ecec32a4ff86f5a4f92e3d35aa1c1a4cf1b63d3/internal/grpcwrapper/rawtopic/rawtopiccommon/server_message_metadata.go"
first_commit_date = "2022-08-01"
last_commit_date = "2025-06-06"
test_file_content = "package rawtopiccommon\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/require\"\n\n\t\"github.com/ydb-platform/ydb-go-sdk/v3/internal/grpcwrapper/rawydb\"\n)\n\nfunc TestServerMessageMetadataInterface_Equals(t *testing.T) {\n\tt.Run(\"NilComparison\", func(t *testing.T) {\n\t\tvar meta1, meta2 *ServerMessageMetadata\n\t\trequire.True(t, meta1.Equals(meta2)) // both nil\n\n\t\tmeta1 = &ServerMessageMetadata{}\n\t\trequire.False(t, meta1.Equals(meta2)) // one nil\n\t\trequire.False(t, meta2.Equals(meta1)) // reversed nil\n\t})\n\n\tt.Run(\"IdenticalEmpty\", func(t *testing.T) {\n\t\tmeta1 := &ServerMessageMetadata{}\n\t\tmeta2 := &ServerMessageMetadata{}\n\t\trequire.True(t, meta1.Equals(meta2))\n\t\trequire.True(t, meta2.Equals(meta1)) // symmetric\n\t})\n\n\tt.Run(\"IdenticalWithStatus\", func(t *testing.T) {\n\t\tmeta1 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusSuccess,\n\t\t}\n\t\tmeta2 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusSuccess,\n\t\t}\n\t\trequire.True(t, meta1.Equals(meta2))\n\t})\n\n\tt.Run(\"DifferentStatus\", func(t *testing.T) {\n\t\tmeta1 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusSuccess,\n\t\t}\n\t\tmeta2 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusInternalError,\n\t\t}\n\t\trequire.False(t, meta1.Equals(meta2))\n\t})\n\n\tt.Run(\"IdenticalWithIssues\", func(t *testing.T) {\n\t\tissues := rawydb.Issues{\n\t\t\t{Code: 100, Message: \"test issue\"},\n\t\t}\n\t\tmeta1 := &ServerMessageMetadata{\n\t\t\tIssues: issues,\n\t\t}\n\t\tmeta2 := &ServerMessageMetadata{\n\t\t\tIssues: issues,\n\t\t}\n\t\trequire.True(t, meta1.Equals(meta2))\n\t})\n\n\tt.Run(\"DifferentIssues\", func(t *testing.T) {\n\t\tmeta1 := &ServerMessageMetadata{\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{Code: 100, Message: \"issue1\"},\n\t\t\t},\n\t\t}\n\t\tmeta2 := &ServerMessageMetadata{\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{Code: 200, Message: \"issue2\"},\n\t\t\t},\n\t\t}\n\t\trequire.False(t, meta1.Equals(meta2))\n\t})\n\n\tt.Run(\"IdenticalStatusAndIssues\", func(t *testing.T) {\n\t\tmeta1 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusSuccess,\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{Code: 100, Message: \"warning\"},\n\t\t\t\t{Code: 200, Message: \"info\"},\n\t\t\t},\n\t\t}\n\t\tmeta2 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusSuccess,\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{Code: 100, Message: \"warning\"},\n\t\t\t\t{Code: 200, Message: \"info\"},\n\t\t\t},\n\t\t}\n\t\trequire.True(t, meta1.Equals(meta2))\n\t})\n\n\tt.Run(\"ComplexNestedIssues\", func(t *testing.T) {\n\t\tmeta1 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusInternalError,\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{\n\t\t\t\t\tCode:    100,\n\t\t\t\t\tMessage: \"parent issue\",\n\t\t\t\t\tIssues: rawydb.Issues{\n\t\t\t\t\t\t{Code: 101, Message: \"child issue 1\"},\n\t\t\t\t\t\t{Code: 102, Message: \"child issue 2\"},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\tmeta2 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusInternalError,\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{\n\t\t\t\t\tCode:    100,\n\t\t\t\t\tMessage: \"parent issue\",\n\t\t\t\t\tIssues: rawydb.Issues{\n\t\t\t\t\t\t{Code: 101, Message: \"child issue 1\"},\n\t\t\t\t\t\t{Code: 102, Message: \"child issue 2\"},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\trequire.True(t, meta1.Equals(meta2))\n\t})\n\n\tt.Run(\"DifferentNestedIssues\", func(t *testing.T) {\n\t\tmeta1 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusInternalError,\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{\n\t\t\t\t\tCode:    100,\n\t\t\t\t\tMessage: \"parent issue\",\n\t\t\t\t\tIssues: rawydb.Issues{\n\t\t\t\t\t\t{Code: 101, Message: \"child issue 1\"},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\tmeta2 := &ServerMessageMetadata{\n\t\t\tStatus: rawydb.StatusInternalError,\n\t\t\tIssues: rawydb.Issues{\n\t\t\t\t{\n\t\t\t\t\tCode:    100,\n\t\t\t\t\tMessage: \"parent issue\",\n\t\t\t\t\tIssues: rawydb.Issues{\n\t\t\t\t\t\t{Code: 102, Message: \"child issue 2\"}, // different nested issue\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\trequire.False(t, meta1.Equals(meta2))\n\t})\n}\n"
