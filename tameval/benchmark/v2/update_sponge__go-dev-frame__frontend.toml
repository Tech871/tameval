[meta]
task = "update"
scenario = "update_test"

[lang_info]
lang = "Go"
go_version = "1.23.0"

[repo_info]
repository = "go-dev-frame/sponge"
sha = "e72bb7443479d95928a16711696af6523999a717"

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out pkg/gin/frontend/frontend.go pkg/gin/frontend/frontend_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting pkg/gin/frontend/frontend.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 0
original_coverage = 49.0
mutation_kill_rate = nan
original_mutation_kill_rate = 20.0
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "pkg/gin/frontend/frontend_test.go"
focal_file_path = "pkg/gin/frontend/frontend.go"
test_file_url = "https://github.com/go-dev-frame/sponge/blob/e72bb7443479d95928a16711696af6523999a717/pkg/gin/frontend/frontend_test.go"
focal_file_url = "https://github.com/go-dev-frame/sponge/blob/e72bb7443479d95928a16711696af6523999a717/pkg/gin/frontend/frontend.go"
first_commit_date = "2024-01-02"
last_commit_date = "2025-03-02"
test_file_content = "package frontend\n\nimport (\n\t\"embed\"\n\t\"os\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\n//go:embed README.md\nvar staticFS embed.FS\n\nfunc TestFrontEnd_SetRouter(t *testing.T) {\n\tvar (\n\t\tisUseEmbedFS   = true\n\t\thtmlDir        = \"user/home\"\n\t\tconfigFile     = \"user/home/config.js\"\n\t\tmodifyConfigFn = func(content []byte) []byte {\n\t\t\treturn content\n\t\t}\n\t)\n\n\tr := gin.New()\n\tgin.SetMode(gin.ReleaseMode)\n\terr := New(staticFS, isUseEmbedFS, htmlDir, configFile, modifyConfigFn).SetRouter(r)\n\tif err != nil {\n\t\tt.Error(err)\n\t}\n\ttime.Sleep(time.Millisecond * 100)\n\n\tr = gin.New()\n\tgin.SetMode(gin.ReleaseMode)\n\tisUseEmbedFS = false\n\terr = New(staticFS, isUseEmbedFS, htmlDir, configFile, modifyConfigFn).SetRouter(r)\n\tif err != nil {\n\t\tt.Error(err)\n\t}\n\ttime.Sleep(time.Millisecond * 500)\n\n\tpath, _ := os.Getwd()\n\terr = os.RemoveAll(path + \"/frontend\")\n\tif err != nil {\n\t\tt.Error(err)\n\t}\n}"
