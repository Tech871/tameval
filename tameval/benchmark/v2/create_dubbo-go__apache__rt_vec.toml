[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.23"

[repo_info]
repository = "apache/dubbo-go"
sha = "8d504e5574e431faca7aa03548e650ab7a9fc6a7"

[run_info]
docker_image = "golang:1.23"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out metrics/prometheus/rt_vec.go metrics/prometheus/rt_vec_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting metrics/prometheus/rt_vec.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 20.0
original_coverage = 100.0
mutation_kill_rate = 64.0
original_mutation_kill_rate = 82.0
covered_lines = [ 38, 39, 40, 47, 141, 142, 143, 144, 145, 155, 156, 157, 158, 159, 195, 196, 197, 198,]
missed_lines = [ 48, 49, 50, 51, 52, 54, 55, 56, 78, 79, 80, 82, 83, 84, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191,]

[input_info]
test_file_path = "metrics/prometheus/rt_vec_test.go"
focal_file_path = "metrics/prometheus/rt_vec.go"
test_file_url = "https://github.com/apache/dubbo-go/blob/8d504e5574e431faca7aa03548e650ab7a9fc6a7/metrics/prometheus/rt_vec_test.go"
focal_file_url = "https://github.com/apache/dubbo-go/blob/8d504e5574e431faca7aa03548e650ab7a9fc6a7/metrics/prometheus/rt_vec.go"
first_commit_date = "2023-08-16"
last_commit_date = "2025-04-26"
test_file_content = "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage prometheus\n\nimport (\n\t\"testing\"\n)\n\nimport (\n\tprom \"github.com/prometheus/client_golang/prometheus\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nimport (\n)\n\n\nfunc TestRtVecDescribe(t *testing.T) {\n\topts := &RtOpts{\n\t\tName:              \"request_num\",\n\t\tbucketNum:         10,\n\t\ttimeWindowSeconds: 120,\n\t\tHelp:              \"Request cost\",\n\t}\n\tlabels := []string{\"app\", \"version\"}\n\tvecs := [2]*RtVec{NewRtVec(opts, labels), NewAggRtVec(opts, labels)}\n\tfor _, r := range vecs {\n\t\tch := make(chan *prom.Desc, len(r.metrics))\n\t\tr.Describe(ch)\n\t\tclose(ch)\n\t\tassert.Equal(t, len(ch), len(r.metrics))\n\t\tfor _, m := range r.metrics {\n\t\t\tdesc, ok := <-ch\n\t\t\tif !ok {\n\t\t\t\tt.Error(t, \"not enough desc\")\n\t\t\t} else {\n\t\t\t\tstr := desc.String()\n\t\t\t\tassert.Contains(t, str, m.nameSuffix)\n\t\t\t\tassert.Contains(t, str, m.helpPrefix)\n\t\t\t\tassert.Contains(t, str, \"app\")\n\t\t\t\tassert.Contains(t, str, \"version\")\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
