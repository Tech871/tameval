[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Python"
python_cfg_file = "requirements.txt"

[repo_info]
repository = "funilrys/PyFunceble"
sha = "6fc0974a65e0987945afdfaed9e7a21dc6ad9894"

[run_info]
docker_image = "python:3"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "pip install -r requirements.test.txt && pip install -r requirements.win.txt && pip install -r requirements.dev.txt && pip install -r requirements.txt && pip install -r requirements.docs.txt && (pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=PyFunceble/converter/adblock_input_line2subject.py -m pytest -q --junit-xml=test_output.xml tests/converter/test_adblock_input_line2subject.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target PyFunceble.converter.adblock_input_line2subject --unit-test tests.converter.test_adblock_input_line2subject --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target PyFunceble/converter/adblock_input_line2subject.py --unit-test tests/converter/test_adblock_input_line2subject.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 19.0
original_coverage = 100.0
original_mutation_kill_rate = 97.0
covered_lines = [ 53, 55, 56, 57, 58, 61, 67, 69, 85, 86, 102, 103, 112, 113, 134, 154, 189, 221, 247, 288, 324, 363, 398, 405,]
missed_lines = [ 94, 95, 98, 108, 110, 125, 129, 130, 131, 132, 143, 145, 149, 150, 152, 168, 170, 171, 172, 174, 175, 177, 178, 182, 183, 185, 187, 203, 205, 207, 210, 212, 213, 214, 215, 217, 219, 235, 237, 239, 240, 241, 243, 245, 264, 266, 268, 269, 271, 272, 274, 275, 277, 279, 280, 281, 282, 284, 286, 304, 305, 307, 312, 314, 316, 320, 322, 343, 344, 346, 347, 349, 351, 353, 354, 355, 356, 358, 359, 361, 380, 381, 383, 384, 386, 388, 389, 390, 392, 394, 396, 403, 415, 417, 418, 419, 420, 421, 422, 424, 426,]

[input_info]
test_file_path = "tests/converter/test_adblock_input_line2subject.py"
focal_file_path = "PyFunceble/converter/adblock_input_line2subject.py"
test_file_url = "https://github.com/funilrys/PyFunceble/blob/6fc0974a65e0987945afdfaed9e7a21dc6ad9894/tests/converter/test_adblock_input_line2subject.py"
focal_file_url = "https://github.com/funilrys/PyFunceble/blob/6fc0974a65e0987945afdfaed9e7a21dc6ad9894/PyFunceble/converter/adblock_input_line2subject.py"
first_commit_date = "2020-12-19"
last_commit_date = "2025-03-19"
test_file_content = "\"\"\"\nThe tool to check the availability or syntax of domain, IP or URL.\n\n::\n\n\n    ██████╗ ██╗   ██╗███████╗██╗   ██╗███╗   ██╗ ██████╗███████╗██████╗ ██╗     ███████╗\n    ██╔══██╗╚██╗ ██╔╝██╔════╝██║   ██║████╗  ██║██╔════╝██╔════╝██╔══██╗██║     ██╔════╝\n    ██████╔╝ ╚████╔╝ █████╗  ██║   ██║██╔██╗ ██║██║     █████╗  ██████╔╝██║     █████╗\n    ██╔═══╝   ╚██╔╝  ██╔══╝  ██║   ██║██║╚██╗██║██║     ██╔══╝  ██╔══██╗██║     ██╔══╝\n    ██║        ██║   ██║     ╚██████╔╝██║ ╚████║╚██████╗███████╗██████╔╝███████╗███████╗\n    ╚═╝        ╚═╝   ╚═╝      ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝╚══════╝╚═════╝ ╚══════╝╚══════╝\n\nTests of our adblock 2 subject converter.\n\nAuthor:\n    Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom\n\nSpecial thanks:\n    https://pyfunceble.github.io/special-thanks.html\n\nContributors:\n    https://pyfunceble.github.io/contributors.html\n\nProject link:\n    https://github.com/funilrys/PyFunceble\n\nProject documentation:\n    https://docs.pyfunceble.com\n\nProject homepage:\n    https://pyfunceble.github.io/\n\nLicense:\n::\n\n\n    Copyright 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025 Nissar Chababy\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        https://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\"\"\"\n\nimport unittest\nfrom typing import List\n\nfrom PyFunceble.converter.adblock_input_line2subject import AdblockInputLine2Subject\nfrom PyFunceble.helpers.regex import RegexHelper\n\n\nclass TestAdblockInputLine2Subject(unittest.TestCase):\n    \"\"\"\n    Tests our adblock 2 subject converter.\n    \"\"\"\n\n    EXTENDED_TEST_SUBJECT: List[dict] = [\n        {\n            \"subject\": '##[href^=\"https://funceble.funilrys.com/\"]',\n            \"expected\": {\n                \"aggressive\": [\"funceble.funilrys.com\"],\n                \"standard\": [],\n            },\n        },\n        {\n            \"subject\": \"||test.hello.world^$domain=hello.world\",\n            \"expected\": {\n                \"aggressive\": [\"hello.world\", \"test.hello.world\"],\n                \"standard\": [\"test.hello.world\"],\n            },\n        },\n        {\n            \"subject\": '##div[href^=\"http://funilrys.com/\"]',\n            \"expected\": {\"aggressive\": [\"funilrys.com\"], \"standard\": []},\n        },\n        {\n            \"subject\": 'com##[href^=\"ftp://funceble.funilrys-funceble.com/\"]',\n            \"expected\": {\n                \"aggressive\": [\"funceble.funilrys-funceble.com\"],\n                \"standard\": [],\n            },\n        },\n        {\n            \"subject\": \"!@@||funceble.world/js\",\n            \"expected\": {\"aggressive\": [], \"standard\": []},\n        },\n        {\n            \"subject\": \"!||world.hello/*ad.xml\",\n            \"expected\": {\"aggressive\": [], \"standard\": []},\n        },\n        {\n            \"subject\": \"!funilrys.com##body\",\n            \"expected\": {\"aggressive\": [], \"standard\": []},\n        },\n        {\n            \"subject\": \"[AdBlock Plus 2.0]\",\n            \"expected\": {\"aggressive\": [], \"standard\": []},\n        },\n        {\n            \"subject\": \"@@||ads.example.com/notbanner^$~script\",\n            \"expected\": {\"aggressive\": [\"ads.example.com\"], \"standard\": []},\n        },\n        {\"subject\": \"/banner/*/img^\", \"expected\": {\"aggressive\": [], \"standard\": []}},\n        {\n            \"subject\": \"||ad.example.co.uk^\",\n            \"expected\": {\n                \"aggressive\": [\"ad.example.co.uk\"],\n                \"standard\": [\"ad.example.co.uk\"],\n            },\n        },\n        {\n            \"subject\": \"||ad.example.fr^$image,test\",\n            \"expected\": {\n                \"aggressive\": [\"ad.example.fr\"],\n                \"standard\": [\"ad.example.fr\"],\n            },\n        },\n        {\n            \"subject\": \"||api.funilrys.com/widget/$\",\n            \"expected\": {\n                \"aggressive\": [\"api.funilrys.com\"],\n                \"standard\": [\"api.funilrys.com\"],\n            },\n        },\n        {\n            \"subject\": \"||api.example.com/papi/action$popup\",\n            \"expected\": {\n                \"aggressive\": [\"api.example.com\"],\n                \"standard\": [\"api.example.com\"],\n            },\n        },\n        {\n            \"subject\": \"||funilrys.github.io$script,image\",\n            \"expected\": {\n                \"aggressive\": [\"funilrys.github.io\"],\n                \"standard\": [\"funilrys.github.io\"],\n            },\n        },\n        {\n            \"subject\": \"||example.net^$script,image\",\n            \"expected\": {\"aggressive\": [\"example.net\"], \"standard\": [\"example.net\"]},\n        },\n        {\n            \"subject\": \"||static.hello.world.examoke.org/*/exit-banner.js\",\n            \"expected\": {\n                \"aggressive\": [\"static.hello.world.examoke.org\"],\n                \"standard\": [\"static.hello.world.examoke.org\"],\n            },\n        },\n        {\n            \"subject\": \"$domain=exam.pl|elpmaxe.pl|example.pl\",\n            \"expected\": {\n                \"aggressive\": [\"elpmaxe.pl\", \"exam.pl\", \"example.pl\"],\n                \"standard\": [],\n            },\n        },\n        {\n            \"subject\": \"||example.de^helloworld.com\",\n            \"expected\": {\n                \"aggressive\": [\"example.de\"],\n                \"standard\": [\"example.de\"],\n            },\n        },\n        {\n            \"subject\": \"|github.io|\",\n            \"expected\": {\"aggressive\": [\"github.io\"], \"standard\": [\"github.io\"]},\n        },\n        {\n            \"subject\": \"~github.com,hello.world##.wrapper\",\n            \"expected\": {\"aggressive\": [\"github.com\", \"hello.world\"], \"standard\": []},\n        },\n        {\n            \"subject\": \"bing.com,bingo.com#@##adBanner\",\n            \"expected\": {\"aggressive\": [\"bing.com\", \"bingo.com\"], \"standard\": []},\n        },\n        {\n            \"subject\": \"example.org#@##test\",\n            \"expected\": {\"aggressive\": [\"example.org\"], \"standard\": []},\n        },\n        {\n            \"subject\": \"hubgit.com|oohay.com|ipa.elloh.dlorw#@#awesomeWorld\",\n            \"expected\": {\n                \"aggressive\": [\"hubgit.com|oohay.com|ipa.elloh.dlorw\"],\n                \"standard\": [],\n            },\n        },\n        {\"subject\": \".com\", \"expected\": {\"aggressive\": [], \"standard\": []}},\n        {\n            \"subject\": \"||ggggggggggg.gq^$all\",\n            \"expected\": {\n                \"aggressive\": [\"ggggggggggg.gq\"],\n                \"standard\": [\"ggggggggggg.gq\"],\n            },\n        },\n        {\n            \"subject\": \"facebook.com##.search\",\n            \"expected\": {\"aggressive\": [\"facebook.com\"], \"standard\": []},\n        },\n        {\n            \"subject\": \"||test.hello.world^$domain=hello.world\",\n            \"expected\": {\n                \"aggressive\": [\"hello.world\", \"test.hello.world\"],\n                \"standard\": [\"test.hello.world\"],\n            },\n        },\n        {\n            \"subject\": \"||examplae.com\",\n            \"expected\": {\"aggressive\": [\"examplae.com\"], \"standard\": [\"examplae.com\"]},\n        },\n        {\n            \"subject\": \"||examplbe.com^\",\n            \"expected\": {\"aggressive\": [\"examplbe.com\"], \"standard\": [\"examplbe.com\"]},\n        },\n        {\n            \"subject\": \"||examplce.com$third-party\",\n            \"expected\": {\"aggressive\": [\"examplce.com\"], \"standard\": [\"examplce.com\"]},\n        },\n        {\n            \"subject\": \"||examplde.com^$third-party\",\n            \"expected\": {\"aggressive\": [\"examplde.com\"], \"standard\": [\"examplde.com\"]},\n        },\n        {\n            \"subject\": '##[href^=\"https://examplee.com/\"]',\n            \"expected\": {\"aggressive\": [\"examplee.com\"], \"standard\": []},\n        },\n        {\n            \"subject\": \"||examplfe.com^examplge.com\",\n            \"expected\": {\"aggressive\": [\"examplfe.com\"], \"standard\": [\"examplfe.com\"]},\n        },\n        {\n            \"subject\": \"||examplhe.com$script,image\",\n            \"expected\": {\"aggressive\": [\"examplhe.com\"], \"standard\": [\"examplhe.com\"]},\n        },\n        {\n            \"subject\": \"||examplie.com^$domain=domain1.com|domain2.com\",\n            \"expected\": {\n                \"aggressive\": [\n                    \"domain1.com\",\n                    \"domain2.com\",\n                    \"examplie.com\",\n                ],\n                \"standard\": [\"examplie.com\"],\n            },\n        },\n        {\n            \"subject\": 'examlple.com##[href^=\"http://hello.world.\"], '\n            '[href^=\"http://example.net/\"]',\n            \"expected\": {\n                \"aggressive\": [\"examlple.com\", \"example.net\", \"hello.world.\"],\n                \"standard\": [],\n            },\n        },\n        {\"subject\": \"##.ad-href1\", \"expected\": {\"aggressive\": [], \"standard\": []}},\n        {\n            \"subject\": \"^hello^$domain=example.com\",\n            \"expected\": {\"standard\": [], \"aggressive\": [\"example.com\"]},\n        },\n        {\n            \"subject\": \"hello$domain=example.net|example.com\",\n            \"expected\": {\"standard\": [], \"aggressive\": [\"example.com\", \"example.net\"]},\n        },\n        {\n            \"subject\": \"hello^$domain=example.org|example.com|example.net\",\n            \"expected\": {\n                \"standard\": [],\n                \"aggressive\": [\"example.com\", \"example.net\", \"example.org\"],\n            },\n        },\n        {\n            \"subject\": 'example.com##a[href=\"https://example.org\"][target=\"_blank\"]',\n            \"expected\": {\"aggressive\": [\"example.com\", \"example.org\"], \"standard\": []},\n        },\n        {\n            # unlikely, but we should be able to handle such weird cases.\n            \"subject\": 'example.com##a[href=\"https://example.org\"]'\n            '[target=\"https://example.net\"]',\n            \"expected\": {\n                \"aggressive\": [\"example.com\", \"example.net\", \"example.org\"],\n                \"standard\": [],\n            },\n        },\n    ]\n\n    def setUp(self) -> None:\n        \"\"\"\n        Setups everything needed for the tests.\n        \"\"\"\n\n        self.converter = AdblockInputLine2Subject()\n\n    def tearDown(self) -> None:\n        \"\"\"\n        Destroys everything previously created for the tests.\n        \"\"\"\n\n        del self.converter\n\n\n\n    def test_set_aggressive_return(self) -> None:\n        \"\"\"\n        Tests the response from the method which let us activate the\n        aggressive mode.\n        \"\"\"\n\n        given = True\n\n        actual = self.converter.set_aggressive(given)\n\n        self.assertIsInstance(actual, AdblockInputLine2Subject)\n\n    def test_set_aggressive_method(self) -> None:\n        \"\"\"\n        Tests the method which let us set activate the aggressive mode.\n        \"\"\"\n\n        given = True\n        expected = True\n\n        self.converter.set_aggressive(given)\n\n        actual = self.converter.aggressive\n\n        self.assertEqual(expected, actual)\n\n    def test_set_aggressive_attribute(self) -> None:\n        \"\"\"\n        Tests overwritting of the :code:`aggressive` attribute.\n        \"\"\"\n\n        given = True\n        expected = True\n\n        self.converter.aggressive = given\n        actual = self.converter.aggressive\n\n        self.assertEqual(expected, actual)\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"
