[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.24"

[repo_info]
repository = "ProtonMail/proton-bridge"
sha = "42605c1923d73f0989027dce4a36c3681206f436"

[run_info]
docker_image = "golang:1.24"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out internal/kb/suggester.go internal/kb/suggester_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting internal/kb/suggester.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 52.0
original_coverage = 83.0
mutation_kill_rate = 37.0
original_mutation_kill_rate = 49.0
covered_lines = [ 47, 48, 49, 50, 51, 52, 55, 56, 61, 65, 66, 67, 68, 69, 70, 73, 74, 75, 80, 81, 83, 84, 85, 87,]
missed_lines = [ 57, 58, 59, 71, 72, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110,]

[input_info]
test_file_path = "internal/kb/suggester_test.go"
focal_file_path = "internal/kb/suggester.go"
test_file_url = "https://github.com/ProtonMail/proton-bridge/blob/42605c1923d73f0989027dce4a36c3681206f436/internal/kb/suggester_test.go"
focal_file_url = "https://github.com/ProtonMail/proton-bridge/blob/42605c1923d73f0989027dce4a36c3681206f436/internal/kb/suggester.go"
first_commit_date = "2023-12-07"
last_commit_date = "2025-01-02"
test_file_content = "// Copyright (c) 2025 Proton AG\n//\n// This file is part of Proton Mail Bridge.\n//\n// Proton Mail Bridge is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Proton Mail Bridge is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Proton Mail Bridge. If not, see <https://www.gnu.org/licenses/>.\n\npackage kb\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/require\"\n)\n\n\nfunc Test_GetSuggestions(t *testing.T) {\n\tsuggestions, err := GetSuggestions(\"Thunderbird is not working, error during password\")\n\trequire.NoError(t, err)\n\tcount := len(suggestions)\n\trequire.True(t, (count > 0) && (count <= 5))\n\tsuggestions, err = GetSuggestions(\"Supercalifragilisticexpialidocious Sesquipedalian Worcestershire\")\n\trequire.NoError(t, err)\n\trequire.Empty(t, suggestions)\n}\n\n"
