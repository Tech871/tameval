[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Go"
go_version = "1.23.1"

[repo_info]
repository = "argoproj/argo-workflows"
sha = "1f738e60f00c7983a47197e49e0c1bc6792e924e"

[run_info]
docker_image = "golang:1.23.1"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out util/deprecation/deprecation.go util/deprecation/deprecation_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting util/deprecation/deprecation.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 12.5
original_coverage = 76.0
mutation_kill_rate = 66.67
original_mutation_kill_rate = nan
covered_lines = [ 48,]
missed_lines = [ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 49, 50, 51,]

[input_info]
test_file_path = "util/deprecation/deprecation_test.go"
focal_file_path = "util/deprecation/deprecation.go"
test_file_url = "https://github.com/argoproj/argo-workflows/blob/1f738e60f00c7983a47197e49e0c1bc6792e924e/util/deprecation/deprecation_test.go"
focal_file_url = "https://github.com/argoproj/argo-workflows/blob/1f738e60f00c7983a47197e49e0c1bc6792e924e/util/deprecation/deprecation.go"
first_commit_date = "2024-10-11"
last_commit_date = "2025-03-11"
test_file_content = "package deprecation\n\nimport (\n\t\"context\"\n\t\"testing\"\n\n)\n\nfunc TestUninitalized(t *testing.T) {\n\tmetricsF = nil\n\tRecord(context.Background(), Schedule)\n}\n"
