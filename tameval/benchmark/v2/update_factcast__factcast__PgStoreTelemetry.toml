[meta]
task = "update"
scenario = "update_test"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "factcast/factcast"
sha = "2764ff31bf1e6bec8b3c6a5a71ba2c0384d72392"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install && mvn -Dmaven.repo.local=/.m2 -T 4 clean package"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl factcast-store -Dtest=PgStoreTelemetryTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl factcast-store -DtargetClasses=**.PgStoreTelemetry  -DtargetTests=**.PgStoreTelemetryTest  -DoutputFormats=XML"
coverage_report_path = "factcast-store/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "factcast-store/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 79.0
original_coverage = 100.0
mutation_kill_rate = 0.0
original_mutation_kill_rate = 0.0
covered_lines = [ 27, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71,]
missed_lines = [ 32, 35, 36, 39, 40, 41,]

[input_info]
test_file_path = "factcast-store/src/test/java/org/factcast/store/internal/telemetry/PgStoreTelemetryTest.java"
focal_file_path = "factcast-store/src/main/java/org/factcast/store/internal/telemetry/PgStoreTelemetry.java"
test_file_url = "https://github.com/factcast/factcast/blob/2764ff31bf1e6bec8b3c6a5a71ba2c0384d72392/factcast-store/src/test/java/org/factcast/store/internal/telemetry/PgStoreTelemetryTest.java"
focal_file_url = "https://github.com/factcast/factcast/blob/2764ff31bf1e6bec8b3c6a5a71ba2c0384d72392/factcast-store/src/main/java/org/factcast/store/internal/telemetry/PgStoreTelemetry.java"
first_commit_date = "2024-06-04"
last_commit_date = "2024-07-11"
test_file_content = "/*\n * Copyright Â© 2017-2024 factcast.org\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.factcast.store.internal.telemetry;\n\nimport static org.mockito.Mockito.*;\n\nimport com.google.common.eventbus.EventBus;\nimport org.factcast.core.subscription.SubscriptionRequestTO;\nimport org.junit.jupiter.api.Test;\n\nclass PgStoreTelemetryTest {\n\n  @Test\n  void setsEventBusOnConstruction() {\n    var eventBus = mock(EventBus.class);\n    var listener = new Object();\n\n    var uut = new PgStoreTelemetry(eventBus);\n    uut.register(listener);\n\n    verify(eventBus).register(listener);\n  }\n\n  @Test\n  void delegatesPostToEventBus() {\n    var eventBus = mock(EventBus.class);\n    var req = new SubscriptionRequestTO();\n    var uut = new PgStoreTelemetry(eventBus);\n\n    uut.onConnect(req);\n    uut.onCatchup(req);\n    uut.onComplete(req);\n    uut.onFollow(req);\n    uut.onClose(req);\n\n    verify(eventBus).post(new PgStoreTelemetry.Connect(req));\n    verify(eventBus).post(new PgStoreTelemetry.Catchup(req));\n    verify(eventBus).post(new PgStoreTelemetry.Complete(req));\n    verify(eventBus).post(new PgStoreTelemetry.Follow(req));\n    verify(eventBus).post(new PgStoreTelemetry.Close(req));\n  }\n}"
