[meta]
task = "update"
scenario = "update_test"

[lang_info]
lang = "Java"
java_version = "21"
java_builder = "Maven"
is_multi_module = false

[repo_info]
repository = "TheAlgorithms/Java"
sha = "16345cba6db8657bf4b83fc7392920aa00a3e170"

[run_info]
docker_image = "maven:3-amazoncorretto-21"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -Dtest=CombinationTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -DtargetClasses=**.Combination  -DtargetTests=**.CombinationTest  -DoutputFormats=XML"
coverage_report_path = "target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0
original_coverage = 100.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "src/test/java/com/thealgorithms/backtracking/CombinationTest.java"
focal_file_path = "src/main/java/com/thealgorithms/backtracking/Combination.java"
test_file_url = "https://github.com/TheAlgorithms/Java/blob/16345cba6db8657bf4b83fc7392920aa00a3e170/src/test/java/com/thealgorithms/backtracking/CombinationTest.java"
focal_file_url = "https://github.com/TheAlgorithms/Java/blob/16345cba6db8657bf4b83fc7392920aa00a3e170/src/main/java/com/thealgorithms/backtracking/Combination.java"
first_commit_date = "2022-02-09"
last_commit_date = "2024-10-26"
test_file_content = "package com.thealgorithms.backtracking;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.List;\nimport java.util.TreeSet;\nimport org.junit.jupiter.api.Test;\n\npublic class CombinationTest {\n\n    @Test\n    void testNoElement() {\n        List<TreeSet<Integer>> result = Combination.combination(new Integer[] {1, 2}, 0);\n        assertTrue(result == null);\n    }\n\n    @Test\n    void testLengthOne() {\n        List<TreeSet<Integer>> result = Combination.combination(new Integer[] {1, 2}, 1);\n        assertTrue(result.get(0).iterator().next() == 1);\n        assertTrue(result.get(1).iterator().next() == 2);\n    }\n\n    @Test\n    void testLengthTwo() {\n        List<TreeSet<Integer>> result = Combination.combination(new Integer[] {1, 2}, 2);\n        Integer[] arr = result.get(0).toArray(new Integer[2]);\n        assertTrue(arr[0] == 1);\n        assertTrue(arr[1] == 2);\n    }\n}"
