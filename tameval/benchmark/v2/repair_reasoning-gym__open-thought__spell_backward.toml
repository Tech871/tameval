[meta]
task = "repair"
scenario = "repair_missed_asserts"

[lang_info]
lang = "Python"
python_version = "3.13"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "open-thought/reasoning-gym"
sha = "02b7fac86358f7ef6239608b0b738a5a03ecfe9e"

[run_info]
docker_image = "python:3.13"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "pip install -r requirements-dev.txt && (pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=reasoning_gym/algorithmic/spell_backward.py -m pytest -q --junit-xml=test_output.xml tests/test_spell_backward.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target reasoning_gym.algorithmic.spell_backward --unit-test tests.test_spell_backward --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target reasoning_gym/algorithmic/spell_backward.py --unit-test tests/test_spell_backward.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 0
original_coverage = 63.0
mutation_kill_rate = 0
original_mutation_kill_rate = nan
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "tests/test_spell_backward.py"
focal_file_path = "reasoning_gym/algorithmic/spell_backward.py"
test_file_url = "https://github.com/open-thought/reasoning-gym/blob/02b7fac86358f7ef6239608b0b738a5a03ecfe9e/tests/test_spell_backward.py"
focal_file_url = "https://github.com/open-thought/reasoning-gym/blob/02b7fac86358f7ef6239608b0b738a5a03ecfe9e/reasoning_gym/algorithmic/spell_backward.py"
first_commit_date = "2025-01-26"
last_commit_date = "2025-07-25"
test_file_content = "\nimport pytest\n\nfrom reasoning_gym.algorithmic.spell_backward import SpellBackwardConfig, SpellBackwardCurriculum, SpellBackwardDataset\n\n\ndef test_spell_backward_config_validation():\n    with pytest.raises(AssertionError):\n        config = SpellBackwardConfig(min_word_len=0)\n        config.validate()\n\n    with pytest.raises(AssertionError):\n        config = SpellBackwardConfig(min_word_len=4, max_word_len=3)\n        config.validate()\n\n\ndef test_spell_backward_dataset_deterministic():\n    config = SpellBackwardConfig(seed=42, size=10)\n    dataset1 = SpellBackwardDataset(config)\n    dataset2 = SpellBackwardDataset(config)\n\n    for i in range(len(dataset1)):\n\n\ndef test_spell_backward_dataset_items():\n    config = SpellBackwardConfig(min_word_len=3, size=10, seed=42)\n    dataset = SpellBackwardDataset(config)\n\n    for i in range(len(dataset)):\n        item = dataset[i]\n\n\n        word = item[\"metadata\"][\"word\"]\n\n\ndef test_spell_backward_dataset_iteration():\n    config = SpellBackwardConfig(size=5, seed=42)\n    dataset = SpellBackwardDataset(config)\n\n    items = list(dataset)\n\n\ndef test_spell_backward_curriculum():\n    curriculum = SpellBackwardCurriculum()\n\n    base_value = {\"size\": 150, \"seed\": 1}\n\n    base_cfg: SpellBackwardConfig = curriculum.generate_configuration(base_value)\n    curriculum.increment_attr_level(\"word_len\")\n    increased_cfg = curriculum.generate_configuration(base_value)\n    curriculum.decrement_attr_level(\"word_len\")\n    partially_decreased_cfg = curriculum.generate_configuration(base_value)"
