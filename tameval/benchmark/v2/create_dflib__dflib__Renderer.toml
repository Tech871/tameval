[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "dflib/dflib"
sha = "793212415a7486ca3cdbb7c6496f69acf4e0aa3d"
bench_version = 2

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl dflib-echarts -Dtest=RendererTest"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl dflib-echarts -DtargetClasses=**.Renderer  -DtargetTests=**.RendererTest  -DoutputFormats=XML"
coverage_report_path = "dflib-echarts/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "dflib-echarts/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 82.0
original_coverage = 82.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 17, 18, 24, 32, 34, 39, 40, 51, 62, 66, 70, 71, 72, 73, 74, 75, 79, 84, 85, 86, 88, 89, 90, 91, 94, 97, 101,]
missed_lines = [ 15, 35, 42, 43, 58, 67,]

[input_info]
test_file_path = "dflib-echarts/src/test/java/org/dflib/echarts/render/util/RendererTest.java"
focal_file_path = "dflib-echarts/src/main/java/org/dflib/echarts/render/util/Renderer.java"
test_file_url = "https://github.com/dflib/dflib/blob/793212415a7486ca3cdbb7c6496f69acf4e0aa3d/dflib-echarts/src/test/java/org/dflib/echarts/render/util/RendererTest.java"
focal_file_url = "https://github.com/dflib/dflib/blob/793212415a7486ca3cdbb7c6496f69acf4e0aa3d/dflib-echarts/src/main/java/org/dflib/echarts/render/util/Renderer.java"
first_commit_date = "2024-06-02"
last_commit_date = "2025-01-25"
test_file_content = "package org.dflib.echarts.render.util;\n\nimport org.dflib.echarts.render.ContainerModel;\nimport org.junit.jupiter.api.Test;\n\nimport java.math.BigDecimal;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class RendererTest {\n\n    @Test\n    public void renderContainer() {\n\n        String s1 = Renderer.renderContainer(new ContainerModel(\"_tid\", 600, 400));\n        assertEquals(\"<div id='_tid' class='dfl_ech' style='width: 600px;height:400px;'></div>\", s1);\n\n        String s2 =Renderer.renderContainer(new ContainerModel(\"_tid\", 20, 10));\n        assertEquals(\"<div id='_tid' class='dfl_ech' style='width: 20px;height:10px;'></div>\", s2);\n    }\n\n    @Test\n    void quoteAndEscape() {\n        assertEquals(\"null\", Renderer.quotedValue(null));\n        assertEquals(\"345\", Renderer.quotedValue(345));\n        assertEquals(\"345.00\", Renderer.quotedValue(new BigDecimal(\"345.00\")));\n\n        assertEquals(\"false\", Renderer.quotedValue(false));\n        assertEquals(\"true\", Renderer.quotedValue(true));\n\n        assertEquals(\"'abc'\", Renderer.quotedValue(\"abc\"));\n        assertEquals(\"'a\\\"bc'\", Renderer.quotedValue(\"a\\\"bc\"));\n        assertEquals(\"'\\\\'a\\\\'b\\\\'c\\\\''\", Renderer.quotedValue(\"'a'b'c'\"));\n    }\n}\n"
