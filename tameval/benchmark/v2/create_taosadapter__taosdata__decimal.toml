[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.24.0"

[repo_info]
repository = "taosdata/taosadapter"
sha = "2e4a8bb5b4d61bb7a6f5b5a722fc038f8c8d1270"

[run_info]
docker_image = "golang:1.24.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out tools/decimal.go tools/decimal_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting tools/decimal.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 81.0
original_coverage = 100.0
mutation_kill_rate = 65.0
original_mutation_kill_rate = 76.0
covered_lines = [ 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,]
missed_lines = [ 7, 8, 9, 10, 11, 12,]

[input_info]
test_file_path = "tools/decimal_test.go"
focal_file_path = "tools/decimal.go"
test_file_url = "https://github.com/taosdata/taosadapter/blob/2e4a8bb5b4d61bb7a6f5b5a722fc038f8c8d1270/tools/decimal_test.go"
focal_file_url = "https://github.com/taosdata/taosadapter/blob/2e4a8bb5b4d61bb7a6f5b5a722fc038f8c8d1270/tools/decimal.go"
first_commit_date = "2025-03-17"
last_commit_date = "2025-03-17"
test_file_content = "package tools\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\n\nfunc TestFormatDecimal(t *testing.T) {\n\ttype args struct {\n\t\tstr   string\n\t\tscale int\n\t}\n\ttests := []struct {\n\t\tname string\n\t\targs args\n\t\twant string\n\t}{\n\t\t{\n\t\t\tname: \"0\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"0\",\n\t\t\t\tscale: 0,\n\t\t\t},\n\t\t\twant: \"0\",\n\t\t},\n\t\t{\n\t\t\tname: \"0.0\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"0\",\n\t\t\t\tscale: 1,\n\t\t\t},\n\t\t\twant: \"0.0\",\n\t\t},\n\t\t{\n\t\t\tname: \"0.00\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"0\",\n\t\t\t\tscale: 2,\n\t\t\t},\n\t\t\twant: \"0.00\",\n\t\t},\n\t\t{\n\t\t\tname: \"1\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"1\",\n\t\t\t\tscale: 0,\n\t\t\t},\n\t\t\twant: \"1\",\n\t\t},\n\t\t{\n\t\t\tname: \"0.1\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"1\",\n\t\t\t\tscale: 1,\n\t\t\t},\n\t\t\twant: \"0.1\",\n\t\t},\n\t\t{\n\t\t\tname: \"-1\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"-1\",\n\t\t\t\tscale: 0,\n\t\t\t},\n\t\t\twant: \"-1\",\n\t\t},\n\t\t{\n\t\t\tname: \"-0.1\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"-1\",\n\t\t\t\tscale: 1,\n\t\t\t},\n\t\t\twant: \"-0.1\",\n\t\t},\n\t\t{\n\t\t\tname: \"170141183460469231731687303715884.105727\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"170141183460469231731687303715884105727\",\n\t\t\t\tscale: 6,\n\t\t\t},\n\t\t\twant: \"170141183460469231731687303715884.105727\",\n\t\t},\n\t\t{\n\t\t\tname: \"-170141183460469231731687303715884.105728\",\n\t\t\targs: args{\n\t\t\t\tstr:   \"-170141183460469231731687303715884105728\",\n\t\t\t\tscale: 6,\n\t\t\t},\n\t\t\twant: \"-170141183460469231731687303715884.105728\",\n\t\t},\n\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tassert.Equalf(t, tt.want, FormatDecimal(tt.args.str, tt.args.scale), \"FormatDecimal(%v, %v)\", tt.args.str, tt.args.scale)\n\t\t})\n\t}\n}\n"
