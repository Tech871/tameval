[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "SAP/cloud-security-services-integration-library"
sha = "bc3a37687860d8dd34ca2e26b45d942bd4a3e85b"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl spring-security -Dtest=HybridAuthorizationAutoConfigurationTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl spring-security -DtargetClasses=**.HybridAuthorizationAutoConfiguration  -DtargetTests=**.HybridAuthorizationAutoConfigurationTest  -DoutputFormats=XML"
coverage_report_path = "spring-security/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "spring-security/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0.0
original_coverage = 100.0
mutation_kill_rate = 0.0
original_mutation_kill_rate = 0.0
covered_lines = []
missed_lines = [ 35, 36, 42, 44,]

[input_info]
test_file_path = "spring-security/src/test/java/com/sap/cloud/security/spring/autoconfig/HybridAuthorizationAutoConfigurationTest.java"
focal_file_path = "spring-security/src/main/java/com/sap/cloud/security/spring/autoconfig/HybridAuthorizationAutoConfiguration.java"
test_file_url = "https://github.com/SAP/cloud-security-services-integration-library/blob/bc3a37687860d8dd34ca2e26b45d942bd4a3e85b/spring-security/src/test/java/com/sap/cloud/security/spring/autoconfig/HybridAuthorizationAutoConfigurationTest.java"
focal_file_url = "https://github.com/SAP/cloud-security-services-integration-library/blob/bc3a37687860d8dd34ca2e26b45d942bd4a3e85b/spring-security/src/main/java/com/sap/cloud/security/spring/autoconfig/HybridAuthorizationAutoConfiguration.java"
first_commit_date = "2021-02-16"
last_commit_date = "2024-02-16"
test_file_content = "/**\n * SPDX-FileCopyrightText: 2018-2023 SAP SE or an SAP affiliate company and Cloud Security Client Java contributors\n * <p>\n * SPDX-License-Identifier: Apache-2.0\n */\npackage com.sap.cloud.security.spring.autoconfig;\n\nimport com.sap.cloud.security.spring.config.XsuaaServiceConfiguration;\nimport com.sap.cloud.security.spring.config.XsuaaServiceConfigurations;\nimport com.sap.cloud.security.spring.token.authentication.XsuaaTokenAuthorizationConverter;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.autoconfigure.AutoConfigurations;\nimport org.springframework.boot.test.context.runner.WebApplicationContextRunner;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.convert.converter.Converter;\nimport org.springframework.security.authentication.AbstractAuthenticationToken;\nimport org.springframework.security.oauth2.jwt.Jwt;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\nclass HybridAuthorizationAutoConfigurationTest {\n\tprivate final WebApplicationContextRunner runner = new WebApplicationContextRunner()\n\t\t\t.withPropertyValues(\"sap.security.services.xsuaa.xsappname:theAppName\")\n\t\t\t.withUserConfiguration(XsuaaServiceConfiguration.class, XsuaaServiceConfigurations.class,\n\t\t\t\t\tXsuaaServiceConfigurations.class)\n\t\t\t.withConfiguration(AutoConfigurations.of(HybridAuthorizationAutoConfiguration.class));\n\n\n\n\t@Test\n\tvoid autoConfigurationDisabledByProperty() {\n\t\trunner.withPropertyValues(\"sap.security.services.xsuaa.xsappname:theAppName\",\n\t\t\t\t\"sap.spring.security.hybrid.auto:false\").run((context) -> {\n\t\t\tassertFalse(context.containsBean(\"xsuaaAuthConverter\"));\n\t\t});\n\t}\n\n\n\n\t@Configuration\n\tstatic class UserConfiguration {\n\n\t\t@Bean\n\t\tpublic XsuaaTokenAuthorizationConverter customXsuaaAuthConverter() {\n\t\t\treturn new XsuaaTokenAuthorizationConverter(\"appId\") {\n\t\t\t\t@Override\n\t\t\t\tpublic AbstractAuthenticationToken convert(Jwt jwt) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n}\n"
