[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Java"
java_version = "11"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "alibaba/fast-modeling-language"
sha = "d453da0f0f93eb0a9b7879049d087ab8498358e5"

[run_info]
docker_image = "maven:3.8.4-openjdk-11"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl fastmodel-core -Dtest=DataTypeUtilTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl fastmodel-core -DtargetClasses=**.DataTypeUtil  -DtargetTests=**.DataTypeUtilTest  -DoutputFormats=XML"
coverage_report_path = "fastmodel-core/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "fastmodel-core/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 70.0
original_coverage = 70.0
mutation_kill_rate = 57.0
original_mutation_kill_rate = 57.0
covered_lines = [ 42, 43, 46, 69, 70, 71, 73,]
missed_lines = [ 33, 44, 57,]

[input_info]
test_file_path = "fastmodel-core/src/test/java/com/aliyun/fastmodel/core/tree/util/DataTypeUtilTest.java"
focal_file_path = "fastmodel-core/src/main/java/com/aliyun/fastmodel/core/tree/util/DataTypeUtil.java"
test_file_url = "https://github.com/alibaba/fast-modeling-language/blob/d453da0f0f93eb0a9b7879049d087ab8498358e5/fastmodel-core/src/test/java/com/aliyun/fastmodel/core/tree/util/DataTypeUtilTest.java"
focal_file_url = "https://github.com/alibaba/fast-modeling-language/blob/d453da0f0f93eb0a9b7879049d087ab8498358e5/fastmodel-core/src/main/java/com/aliyun/fastmodel/core/tree/util/DataTypeUtil.java"
first_commit_date = "2022-03-30"
last_commit_date = "2024-07-07"
test_file_content = "/*\n * Copyright 2021-2022 Alibaba Group Holding Ltd.\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\npackage com.aliyun.fastmodel.core.tree.util;\n\nimport com.aliyun.fastmodel.core.tree.datatype.BaseDataType;\nimport com.aliyun.fastmodel.core.tree.datatype.DataTypeEnums;\nimport com.aliyun.fastmodel.core.tree.datatype.DataTypeParameter;\nimport com.aliyun.fastmodel.core.tree.datatype.RowDataType;\nimport com.google.common.collect.ImmutableList;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\n/**\n * convert\n *\n * @author panguanjing\n * @date 2021/4/1\n */\npublic class DataTypeUtilTest {\n\n    @Test\n    public void testConvert() {\n        BaseDataType baseDataType = DataTypeUtil.simpleType(DataTypeEnums.DATE, new DataTypeParameter[0]);\n        BaseDataType convert = DataTypeUtil.convert(baseDataType, DataTypeEnums.DATETIME);\n        assertEquals(convert.getTypeName(), DataTypeEnums.DATETIME);\n    }\n\n    @Test\n    public void testConvertException() {\n        BaseDataType convert = DataTypeUtil.convert(new RowDataType(ImmutableList.of()), DataTypeEnums.DATE);\n        assertEquals(convert.getClass(), RowDataType.class);\n    }\n}"
