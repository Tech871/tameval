[meta]
task = "repair"
scenario = "repair_missed_dependencies"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "microsphere-projects/microsphere-java"
sha = "0d031dbf7b6729e10550725b08238918a4ceeca8"
bench_version = 2

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl microsphere-annotation-processor -Dtest=LoggerUtilsTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl microsphere-annotation-processor -DtargetClasses=**.LoggerUtils  -DtargetTests=**.LoggerUtilsTest  -DoutputFormats=XML"
coverage_report_path = "microsphere-annotation-processor/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "microsphere-annotation-processor/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0.0
original_coverage = 100.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "microsphere-annotation-processor/src/test/java/io/microsphere/annotation/processor/util/LoggerUtilsTest.java"
focal_file_path = "microsphere-annotation-processor/src/main/java/io/microsphere/annotation/processor/util/LoggerUtils.java"
test_file_url = "https://github.com/microsphere-projects/microsphere-java/blob/0d031dbf7b6729e10550725b08238918a4ceeca8/microsphere-annotation-processor/src/test/java/io/microsphere/annotation/processor/util/LoggerUtilsTest.java"
focal_file_url = "https://github.com/microsphere-projects/microsphere-java/blob/0d031dbf7b6729e10550725b08238918a4ceeca8/microsphere-annotation-processor/src/main/java/io/microsphere/annotation/processor/util/LoggerUtils.java"
first_commit_date = "2023-05-29"
last_commit_date = "2025-04-16"
test_file_content = "\npackage io.microsphere.annotation.processor.util;\n\n\nimport static io.microsphere.annotation.processor.util.LoggerUtils.info;\nimport static io.microsphere.annotation.processor.util.LoggerUtils.warn;\n\n\nclass LoggerUtilsTest {\n\n    @Test\n    void testLogger() {\n        assertNotNull(LOGGER);\n    }\n\n    @Test\n    void testTrace() {\n        trace(\"Hello,World\");\n        trace(\"Hello,{}\", \"World\");\n        trace(\"{},{}\", \"Hello\", \"World\");\n    }\n\n    @Test\n    void testDebug() {\n        debug(\"Hello,World\");\n        debug(\"Hello,{}\", \"World\");\n        debug(\"{},{}\", \"Hello\", \"World\");\n    }\n\n    @Test\n    void testInfo() {\n        info(\"Hello,World\");\n        info(\"Hello,{}\", \"World\");\n        info(\"{},{}\", \"Hello\", \"World\");\n    }\n\n    @Test\n    void testWarn() {\n        warn(\"Hello,World\");\n        warn(\"Hello,{}\", \"World\");\n        warn(\"{},{}\", \"Hello\", \"World\");\n    }\n\n    @Test\n    void testError() {\n        error(\"Hello,World\");\n        error(\"Hello,{}\", \"World\");\n        error(\"{},{}\", \"Hello\", \"World\");\n    }\n}"
