[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Python"
python_version = "3.12"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "visivo-io/visivo"
sha = "65f80739da9eae151e990b6d21751f8d904c80e9"

[run_info]
docker_image = "python:3.12"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "(pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=visivo/models/sources/postgresql_source.py -m pytest -q --junit-xml=test_output.xml tests/models/sources/test_postgresql_source.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target visivo.models.sources.postgresql_source --unit-test tests.models.sources.test_postgresql_source --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target visivo/models/sources/postgresql_source.py --unit-test tests/models/sources/test_postgresql_source.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 61.0
original_coverage = 61.0
mutation_kill_rate = 100.0
original_mutation_kill_rate = 100.0
covered_lines = [ 0, 1, 2, 3, 5, 8, 31, 32, 36, 37, 39,]
missed_lines = [ 41, 42, 43, 45, 48, 49, 51,]

[input_info]
test_file_path = "tests/models/sources/test_postgresql_source.py"
focal_file_path = "visivo/models/sources/postgresql_source.py"
test_file_url = "https://github.com/visivo-io/visivo/blob/65f80739da9eae151e990b6d21751f8d904c80e9/tests/models/sources/test_postgresql_source.py"
focal_file_url = "https://github.com/visivo-io/visivo/blob/65f80739da9eae151e990b6d21751f8d904c80e9/visivo/models/sources/postgresql_source.py"
first_commit_date = "2024-08-28"
last_commit_date = "2025-07-19"
test_file_content = "from visivo.models.sources.postgresql_source import PostgresqlSource\nimport click\nimport pytest\n\n\ndef test_PostgresqlSource_simple_data():\n    data = {\"name\": \"source\", \"database\": \"database\", \"type\": \"postgresql\"}\n    source = PostgresqlSource(**data)\n    assert source.name == \"source\"\n\n\ndef test_PostgresqlSource_bad_connection():\n    data = {\n        \"name\": \"development\",\n        \"database\": \"database\",\n        \"type\": \"postgresql\",\n        \"port\": 5434,\n    }\n    source = PostgresqlSource(**data)\n    with pytest.raises(click.ClickException) as exc_info:\n        source.read_sql(\"query\")\n\n    assert (\n        \"Error connecting to source 'development'. Ensure the database is running and the connection properties are correct.\"\n        in exc_info.value.message\n    )\n"
