[meta]
task = "update"
scenario = "update_test"

[lang_info]
lang = "Java"
java_version = "1.8"
java_builder = "Maven"
is_multi_module = false

[repo_info]
repository = "taosdata/taos-connector-jdbc"
sha = "180ba59e0aa7793a85db8d1cc332722f324b0b9d"

[run_info]
docker_image = "maven:3.8.6-jdk-8"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -Dtest=JsonUtilTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -DtargetClasses=**.JsonUtil  -DtargetTests=**.JsonUtilTest  -DoutputFormats=XML"
coverage_report_path = "target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0
original_coverage = 84.0
mutation_kill_rate = nan
original_mutation_kill_rate = 20.0
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "src/test/java/com/taosdata/jdbc/utils/JsonUtilTest.java"
focal_file_path = "src/main/java/com/taosdata/jdbc/utils/JsonUtil.java"
test_file_url = "https://github.com/taosdata/taos-connector-jdbc/blob/180ba59e0aa7793a85db8d1cc332722f324b0b9d/src/test/java/com/taosdata/jdbc/utils/JsonUtilTest.java"
focal_file_url = "https://github.com/taosdata/taos-connector-jdbc/blob/180ba59e0aa7793a85db8d1cc332722f324b0b9d/src/main/java/com/taosdata/jdbc/utils/JsonUtil.java"
first_commit_date = "2024-10-15"
last_commit_date = "2025-07-26"
test_file_content = "package com.taosdata.jdbc.utils;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.junit.Assert;\nimport org.junit.Test;\n\nimport java.text.SimpleDateFormat;\n\npublic class JsonUtilTest {\n    private static final ObjectMapper objectMapper = JsonUtil.getObjectMapper();\n\n\n    @Test\n    public void testIgnoreUnknownProperties() throws Exception {\n        String json = \"{\\\"knownProperty\\\":\\\"value\\\", \\\"unknownProperty\\\":\\\"value\\\"}\";\n        TestKnownPropertyClass result = objectMapper.readValue(json, TestKnownPropertyClass.class);\n        Assert.assertEquals(\"value\", result.knownProperty);\n    }\n\n    @Test\n    public void testSerializationWithoutNull() throws Exception {\n        TestNullPropertyClass testClass = new TestNullPropertyClass();\n        testClass.name = \"John\";\n        testClass.age = null;\n        String json = objectMapper.writeValueAsString(testClass);\n        Assert.assertFalse(json.contains(\"age\"));\n    }\n\n    @Test\n    public void testDateFormat() throws Exception {\n        TestClassWithDate testClass = new TestClassWithDate();\n        testClass.date = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(\"2023-10-01 12:00:00\");\n        String json = objectMapper.writeValueAsString(testClass);\n        Assert.assertTrue(json.contains(\"\\\"date\\\":\\\"2023-10-01 12:00:00\\\"\"));\n    }\n\n    @Test\n    public void testJavaTimeModule() throws Exception {\n        String json = \"{\\\"localDateTime\\\":\\\"2023-10-01T12:00:00\\\"}\";\n        TestClassWithJavaTime result = objectMapper.readValue(json, TestClassWithJavaTime.class);\n        Assert.assertEquals(\"2023-10-01T12:00\", result.localDateTime.toString());\n    }\n\n    // 测试类\n    static class TestKnownPropertyClass {\n        public String knownProperty;\n    }\n\n    static class TestClassWithDate {\n        public java.util.Date date;\n    }\n\n    static class TestClassWithArray {\n        public String[] values;\n    }\n\n    static class TestClassWithJavaTime {\n        public java.time.LocalDateTime localDateTime;\n    }\n    static class TestNullPropertyClass {\n        public String name;\n        public Integer age;\n    }\n}"
