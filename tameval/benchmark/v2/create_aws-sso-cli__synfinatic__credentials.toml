[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Go"
go_version = "1.23.0"

[repo_info]
repository = "synfinatic/aws-sso-cli"
sha = "23193a6e70381add71c46ebf22c0a272b679f94e"
bench_version = 2

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/VirtualRoyalty/go-mutesting/cmd/go-mutesting@v1.0.9 && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out internal/awsconfig/credentials.go internal/awsconfig/credentials_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting internal/awsconfig/credentials.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 30.0
original_coverage = 45.0
mutation_kill_rate = 0.0
original_mutation_kill_rate = 43.0
covered_lines = [ 46, 50, 51, 71, 72, 73,]
missed_lines = [ 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,]

[input_info]
test_file_path = "internal/awsconfig/credentials_test.go"
focal_file_path = "internal/awsconfig/credentials.go"
test_file_url = "https://github.com/synfinatic/aws-sso-cli/blob/23193a6e70381add71c46ebf22c0a272b679f94e/internal/awsconfig/credentials_test.go"
focal_file_url = "https://github.com/synfinatic/aws-sso-cli/blob/23193a6e70381add71c46ebf22c0a272b679f94e/internal/awsconfig/credentials.go"
first_commit_date = "2024-06-04"
last_commit_date = "2025-01-23"
test_file_content = "package awsconfig\n\n/*\n * AWS SSO CLI\n * Copyright (c) 2021-2025 Aaron Turner  <synfinatic at gmail dot com>\n *\n * This program is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or with the authors permission any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/MakeNowJust/heredoc\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestGenProfileCredentials(t *testing.T) {\n\t// Create a buffer to capture STDOUT\n\tbuf := &bytes.Buffer{}\n\n\t// Create example ProfileCredentials\n\tcreds := []ProfileCredentials{\n\t\t{\n\t\t\tProfile:         \"first\",\n\t\t\tAccessKeyId:     \"AKIAIOSFODNN7EXAMPLE\",\n\t\t\tSecretAccessKey: \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\",\n\t\t\tSessionToken:    \"AQoDYXdzEJr...<remainder of security token>\",\n\t\t\tExpires:         \"2024-06-03 17:56:11 -0700 PDT\",\n\t\t},\n\t\t{\n\t\t\tProfile:         \"second\",\n\t\t\tAccessKeyId:     \"AKIAYOMAMMAEXAMPLE\",\n\t\t\tSecretAccessKey: \"wJalrXUtnFEMI/YESMAN/bPxRfiCYEXAMPLEKEY\",\n\t\t\tSessionToken:    \"AQoEdBaglyJunior...<remainder of security token>\",\n\t\t\tExpires:         \"2024-06-03 18:58:01 -0700 PDT\",\n\t\t},\n\t}\n\n\terr := genProfileCredentials(buf, creds)\n\tassert.NoError(t, err)\n\n\tcredsResult := heredoc.Doc(`\n\n\t\t[first]\n\t\t# Expires: 2024-06-03 17:56:11 -0700 PDT\n\t\taws_access_key_id = AKIAIOSFODNN7EXAMPLE\n\t\taws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n\t\taws_session_token = AQoDYXdzEJr...<remainder of security token>\n\n\t\t[second]\n\t\t# Expires: 2024-06-03 18:58:01 -0700 PDT\n\t\taws_access_key_id = AKIAYOMAMMAEXAMPLE\n\t\taws_secret_access_key = wJalrXUtnFEMI/YESMAN/bPxRfiCYEXAMPLEKEY\n\t\taws_session_token = AQoEdBaglyJunior...<remainder of security token>\n\n\t`)\n\n\tassert.Equal(t, credsResult, buf.String())\n\n\t// replace os.Stdout with our buffer\n\told := os.Stdout\n\tr, w, _ := os.Pipe()\n\tos.Stdout = w\n\n\terr = PrintProfileCredentials(creds)\n\tassert.NoError(t, err)\n\tw.Close()\n\toutput, _ := io.ReadAll(r)\n\tassert.Equal(t, credsResult, string(output))\n\n\t// restore stdout\n\tos.Stdout = old\n}\n"
