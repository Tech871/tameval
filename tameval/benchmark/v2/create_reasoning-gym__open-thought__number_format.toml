[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Python"
python_version = "3.13"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "open-thought/reasoning-gym"
sha = "02b7fac86358f7ef6239608b0b738a5a03ecfe9e"

[run_info]
docker_image = "python:3.13"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "pip install -r requirements-dev.txt && (pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=reasoning_gym/arithmetic/number_format.py -m pytest -q --junit-xml=test_output.xml tests/test_number_format.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target reasoning_gym.arithmetic.number_format --unit-test tests.test_number_format --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target reasoning_gym/arithmetic/number_format.py --unit-test tests/test_number_format.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 83.0
original_coverage = 100.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 2, 3, 4, 6, 7, 9, 16, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 38, 39, 40, 43, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 83, 85, 87, 88, 89, 91, 92, 94, 114, 115, 144,]
missed_lines = [ 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 118,]

[input_info]
test_file_path = "tests/test_number_format.py"
focal_file_path = "reasoning_gym/arithmetic/number_format.py"
test_file_url = "https://github.com/open-thought/reasoning-gym/blob/02b7fac86358f7ef6239608b0b738a5a03ecfe9e/tests/test_number_format.py"
focal_file_url = "https://github.com/open-thought/reasoning-gym/blob/02b7fac86358f7ef6239608b0b738a5a03ecfe9e/reasoning_gym/arithmetic/number_format.py"
first_commit_date = "2025-02-19"
last_commit_date = "2025-04-04"
test_file_content = "\"\"\"Tests for Number Format questions generation\"\"\"\n\nimport pytest\n\nfrom reasoning_gym.arithmetic.number_format import NumberFormatConfig, NumberFormatCurriculum, NumberFormatDataset\n\ndef test_number_format_dataset_iteration():\n    \"\"\"Test that iteration respects dataset size\"\"\"\n    config = NumberFormatConfig(size=5, seed=42)\n    dataset = NumberFormatDataset(config)\n\n    items = list(dataset)\n    assert len(items) == config.size\n\n    # Test multiple iterations yield same items\n    assert items == list(dataset)\n"
