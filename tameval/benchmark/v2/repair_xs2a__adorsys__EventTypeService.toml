[meta]
task = "repair"
scenario = "repair_no_new_covered_logic"

[lang_info]
lang = "Java"
java_version = "17"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "adorsys/xs2a"
sha = "0433f7f22022c8f2b17b835a11a13e5cd33f29a6"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl xs2a-impl -Dtest=EventTypeServiceTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl xs2a-impl -DtargetClasses=**.EventTypeService  -DtargetTests=**.EventTypeServiceTest  -DoutputFormats=XML"
coverage_report_path = "xs2a-impl/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "xs2a-impl/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 100.0
original_coverage = 100.0
mutation_kill_rate = 0
original_mutation_kill_rate = nan
covered_lines = [ 27, 29, 33, 34, 37, 38, 41, 42, 45, 46, 49, 52, 53, 54, 61, 62, 69, 70, 77, 78, 85, 86, 97, 98, 99, 102,]
missed_lines = []

[input_info]
test_file_path = "xs2a-impl/src/test/java/de/adorsys/psd2/xs2a/service/event/EventTypeServiceTest.java"
focal_file_path = "xs2a-impl/src/main/java/de/adorsys/psd2/xs2a/service/event/EventTypeService.java"
test_file_url = "https://github.com/adorsys/xs2a/blob/0433f7f22022c8f2b17b835a11a13e5cd33f29a6/xs2a-impl/src/test/java/de/adorsys/psd2/xs2a/service/event/EventTypeServiceTest.java"
focal_file_url = "https://github.com/adorsys/xs2a/blob/0433f7f22022c8f2b17b835a11a13e5cd33f29a6/xs2a-impl/src/main/java/de/adorsys/psd2/xs2a/service/event/EventTypeService.java"
first_commit_date = "2020-08-19"
last_commit_date = "2024-02-01"
test_file_content = "package de.adorsys.psd2.xs2a.service.event;\n\nimport de.adorsys.psd2.event.core.model.EventType;\nimport de.adorsys.psd2.xs2a.core.psu.PsuIdData;\nimport de.adorsys.psd2.xs2a.core.sca.ScaStatus;\nimport de.adorsys.psd2.xs2a.domain.authorisation.CommonAuthorisationParameters;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nclass EventTypeServiceTest {\n    private final EventTypeService eventTypeService = new EventTypeService();\n\n    @Test\n    void checkEventTypeForIdentification() {\n        Map.of(\n            EventAuthorisationType.AIS, EventType.UPDATE_AIS_CONSENT_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIIS, EventType.UPDATE_PIIS_CONSENT_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS, EventType.UPDATE_PAYMENT_AUTHORISATION_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS_CANCELLATION, EventType.UPDATE_PAYMENT_CANCELLATION_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED\n        ).forEach((key, value) -> {\n            CommonAuthorisationParameters updateAuthorisationRequest = createIdentificatonRequest();\n            EventType eventType = eventTypeService.getEventType(updateAuthorisationRequest, key);\n            assertEquals(value, eventType);\n        });\n    }\n\n    @Test\n    void verifyEventTypeWithIdentification() {\n        Map.of(\n            EventAuthorisationType.AIS, EventType.UPDATE_AIS_CONSENT_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIIS, EventType.UPDATE_PIIS_CONSENT_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS, EventType.UPDATE_PAYMENT_AUTHORISATION_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS_CANCELLATION, EventType.UPDATE_PAYMENT_CANCELLATION_PSU_DATA_IDENTIFICATION_REQUEST_RECEIVED\n        ).entrySet().stream().forEach(entry -> {\n            CommonAuthorisationParameters updateAuthorisationRequest = generateIdentificationRequest();\n            EventType eventType = eventTypeService.getEventType(updateAuthorisationRequest, entry.getKey());\n            assertEquals(entry.getValue(), eventType);\n        });\n    }\n\n    @Test\n    void getEventType_Authentication() {\n        Map.of(\n            EventAuthorisationType.AIS, EventType.UPDATE_AIS_CONSENT_PSU_DATA_AUTHENTICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIIS, EventType.UPDATE_PIIS_CONSENT_PSU_DATA_AUTHENTICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS, EventType.UPDATE_PAYMENT_AUTHORISATION_PSU_DATA_AUTHENTICATION_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS_CANCELLATION, EventType.UPDATE_PAYMENT_CANCELLATION_PSU_DATA_AUTHENTICATION_REQUEST_RECEIVED\n        ).forEach((key, value) -> {\n            CommonAuthorisationParameters updateAuthorisationRequest = buildUpdateAuthorisationRequest_Authentication();\n            EventType eventType = eventTypeService.getEventType(updateAuthorisationRequest, key);\n            assertEquals(value, eventType);\n        });\n    }\n\n    @Test\n    void getEventType_SelectAuthenticationMethod() {\n        Map.of(\n            EventAuthorisationType.AIS, EventType.UPDATE_AIS_CONSENT_PSU_DATA_SELECT_AUTHENTICATION_METHOD_REQUEST_RECEIVED,\n            EventAuthorisationType.PIIS, EventType.UPDATE_PIIS_CONSENT_PSU_DATA_SELECT_AUTHENTICATION_METHOD_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS, EventType.UPDATE_PAYMENT_AUTHORISATION_PSU_DATA_SELECT_AUTHENTICATION_METHOD_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS_CANCELLATION, EventType.UPDATE_PAYMENT_CANCELLATION_PSU_DATA_SELECT_AUTHENTICATION_METHOD_REQUEST_RECEIVED\n        ).forEach((key, value) -> {\n            CommonAuthorisationParameters updateAuthorisationRequest = buildUpdateAuthorisationRequest_SelectAuthenticationMethod();\n            EventType eventType = eventTypeService.getEventType(updateAuthorisationRequest, key);\n            assertEquals(value, eventType);\n        });\n    }\n\n    @Test\n    void getEventType_Tan() {\n        Map.of(\n            EventAuthorisationType.AIS, EventType.UPDATE_AIS_CONSENT_PSU_DATA_TAN_REQUEST_RECEIVED,\n            EventAuthorisationType.PIIS, EventType.UPDATE_PIIS_CONSENT_PSU_DATA_TAN_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS, EventType.UPDATE_PAYMENT_AUTHORISATION_PSU_DATA_TAN_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS_CANCELLATION, EventType.UPDATE_PAYMENT_CANCELLATION_PSU_DATA_TAN_REQUEST_RECEIVED\n        ).forEach((key, value) -> {\n            CommonAuthorisationParameters updateAuthorisationRequest = buildUpdateAuthorisationRequest_Tan();\n            EventType eventType = eventTypeService.getEventType(updateAuthorisationRequest, key);\n            assertEquals(value, eventType);\n        });\n    }\n\n    @Test\n    void getEventType_ConfirmationCode() {\n        Map.of(\n            EventAuthorisationType.AIS, EventType.UPDATE_AIS_CONSENT_PSU_DATA_CONFIRMATION_CODE_REQUEST_RECEIVED,\n            EventAuthorisationType.PIIS, EventType.UPDATE_PIIS_CONSENT_PSU_DATA_CONFIRMATION_CODE_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS, EventType.UPDATE_PAYMENT_AUTHORISATION_PSU_DATA_CONFIRMATION_CODE_REQUEST_RECEIVED,\n            EventAuthorisationType.PIS_CANCELLATION, EventType.UPDATE_PAYMENT_CANCELLATION_PSU_DATA_CONFIRMATION_CODE_REQUEST_RECEIVED\n        ).forEach((key, value) -> {\n            CommonAuthorisationParameters updateAuthorisationRequest = buildUpdateAuthorisationRequest_ConfirmationCode();\n            EventType eventType = eventTypeService.getEventType(updateAuthorisationRequest, key);\n            assertEquals(value, eventType);\n        });\n    }\n\n    private CommonAuthorisationParameters createIdentificatonRequest() {\n        return new CommonAuthorisationParameters() {\n            @Override\n            public PsuIdData getPsuData() {\n                return new PsuIdData();\n            }\n\n            @Override\n            public String getBusinessObjectId() {\n                return null;\n            }\n\n            @Override\n            public String getAuthorisationId() {\n                return null;\n            }\n\n            @Override\n            public ScaStatus getScaStatus() {\n                return null;\n            }\n\n            @Override\n            public boolean isUpdatePsuIdentification() {\n                return false;\n            }\n\n            @Override\n            public String getAuthenticationMethodId() {\n                return null;\n            }\n\n            @Override\n            public String getScaAuthenticationData() {\n                return null;\n            }\n\n            @Override\n            public String getPassword() {\n                return null;\n            }\n\n            @Override\n            public String getConfirmationCode() {\n                return null;\n            }\n        };\n    }\n\n    private CommonAuthorisationParameters generateIdentificationRequest() {\n        return new CommonAuthorisationParameters() {\n            @Override\n            public PsuIdData getPsuData() {\n                return new PsuIdData();\n            }\n\n            @Override\n            public String getBusinessObjectId() {\n                return null;\n            }\n\n            @Override\n            public String getAuthorisationId() {\n                return null;\n            }\n\n            @Override\n            public ScaStatus getScaStatus() {\n                return null;\n            }\n\n            @Override\n            public boolean isUpdatePsuIdentification() {\n                return false;\n            }\n\n            @Override\n            public String getAuthenticationMethodId() {\n                return null;\n            }\n\n            @Override\n            public String getScaAuthenticationData() {\n                return null;\n            }\n\n            @Override\n            public String getPassword() {\n                return null;\n            }\n\n            @Override\n            public String getConfirmationCode() {\n                return null;\n            }\n        };\n    }\n\n    private CommonAuthorisationParameters buildUpdateAuthorisationRequest_Authentication() {\n        return new CommonAuthorisationParameters() {\n            @Override\n            public PsuIdData getPsuData() {\n                return null;\n            }\n\n            @Override\n            public String getBusinessObjectId() {\n                return null;\n            }\n\n            @Override\n            public String getAuthorisationId() {\n                return null;\n            }\n\n            @Override\n            public ScaStatus getScaStatus() {\n                return null;\n            }\n\n            @Override\n            public boolean isUpdatePsuIdentification() {\n                return false;\n            }\n\n            @Override\n            public String getAuthenticationMethodId() {\n                return null;\n            }\n\n            @Override\n            public String getScaAuthenticationData() {\n                return null;\n            }\n\n            @Override\n            public String getPassword() {\n                return \"****\";\n            }\n\n            @Override\n            public String getConfirmationCode() {\n                return null;\n            }\n        };\n    }\n\n    private CommonAuthorisationParameters buildUpdateAuthorisationRequest_SelectAuthenticationMethod() {\n        return new CommonAuthorisationParameters() {\n            @Override\n            public PsuIdData getPsuData() {\n                return null;\n            }\n\n            @Override\n            public String getBusinessObjectId() {\n                return null;\n            }\n\n            @Override\n            public String getAuthorisationId() {\n                return null;\n            }\n\n            @Override\n            public ScaStatus getScaStatus() {\n                return null;\n            }\n\n            @Override\n            public boolean isUpdatePsuIdentification() {\n                return false;\n            }\n\n            @Override\n            public String getAuthenticationMethodId() {\n                return \"method\";\n            }\n\n            @Override\n            public String getScaAuthenticationData() {\n                return null;\n            }\n\n            @Override\n            public String getPassword() {\n                return null;\n            }\n\n            @Override\n            public String getConfirmationCode() {\n                return null;\n            }\n        };\n    }\n\n    private CommonAuthorisationParameters buildUpdateAuthorisationRequest_Tan() {\n        return new CommonAuthorisationParameters() {\n            @Override\n            public PsuIdData getPsuData() {\n                return null;\n            }\n\n            @Override\n            public String getBusinessObjectId() {\n                return null;\n            }\n\n            @Override\n            public String getAuthorisationId() {\n                return null;\n            }\n\n            @Override\n            public ScaStatus getScaStatus() {\n                return null;\n            }\n\n            @Override\n            public boolean isUpdatePsuIdentification() {\n                return false;\n            }\n\n            @Override\n            public String getAuthenticationMethodId() {\n                return null;\n            }\n\n            @Override\n            public String getScaAuthenticationData() {\n                return \"tan\";\n            }\n\n            @Override\n            public String getPassword() {\n                return null;\n            }\n\n            @Override\n            public String getConfirmationCode() {\n                return null;\n            }\n        };\n    }\n\n    private CommonAuthorisationParameters buildUpdateAuthorisationRequest_ConfirmationCode() {\n        return new CommonAuthorisationParameters() {\n            @Override\n            public PsuIdData getPsuData() {\n                return null;\n            }\n\n            @Override\n            public String getBusinessObjectId() {\n                return null;\n            }\n\n            @Override\n            public String getAuthorisationId() {\n                return null;\n            }\n\n            @Override\n            public ScaStatus getScaStatus() {\n                return null;\n            }\n\n            @Override\n            public boolean isUpdatePsuIdentification() {\n                return false;\n            }\n\n            @Override\n            public String getAuthenticationMethodId() {\n                return null;\n            }\n\n            @Override\n            public String getScaAuthenticationData() {\n                return null;\n            }\n\n            @Override\n            public String getPassword() {\n                return null;\n            }\n\n            @Override\n            public String getConfirmationCode() {\n                return \"code\";\n            }\n        };\n    }\n}"
