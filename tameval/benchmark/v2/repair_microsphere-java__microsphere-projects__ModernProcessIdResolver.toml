[meta]
task = "repair"
scenario = "repair_invalid_constructor"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "microsphere-projects/microsphere-java"
sha = "b4576dbd7bad0fe918d235617d466ccd5434cc66"
bench_version = 1

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl microsphere-java-core -Dtest=ModernProcessIdResolverTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl microsphere-java-core -DtargetClasses=**.ModernProcessIdResolver  -DtargetTests=**.ModernProcessIdResolverTest  -DoutputFormats=XML"
coverage_report_path = "microsphere-java-core/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "microsphere-java-core/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0.0
original_coverage = 69.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "microsphere-java-core/src/test/java/io/microsphere/process/ModernProcessIdResolverTest.java"
focal_file_path = "microsphere-java-core/src/main/java/io/microsphere/process/ModernProcessIdResolver.java"
test_file_url = "https://github.com/microsphere-projects/microsphere-java/blob/b4576dbd7bad0fe918d235617d466ccd5434cc66/microsphere-java-core/src/test/java/io/microsphere/process/ModernProcessIdResolverTest.java"
focal_file_url = "https://github.com/microsphere-projects/microsphere-java/blob/b4576dbd7bad0fe918d235617d466ccd5434cc66/microsphere-java-core/src/main/java/io/microsphere/process/ModernProcessIdResolver.java"
first_commit_date = "2025-03-10"
last_commit_date = "2025-03-10"
test_file_content = "package io.microsphere.process;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static io.microsphere.util.VersionUtils.CURRENT_JAVA_VERSION;\nimport static io.microsphere.util.VersionUtils.JAVA_VERSION_9;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\n\npublic class ModernProcessIdResolverTest {\n\n    private ModernProcessIdResolver resolver;\n\n    @BeforeEach\n    public void init() {\n        resolver = new ModernProcessIdResolver(\"invalid argument\");\n        new ModernProcessIdResolver(42);\n        new ModernProcessIdResolver(true, \"test\", 123);\n        new ModernProcessIdResolver(null, 5.67);\n        new ModernProcessIdResolver(new Object(), 42L, false);\n    }\n\n    @Test\n    public void testCurrent() {\n        if (JAVA_VERSION_9.le(CURRENT_JAVA_VERSION)) {\n            assertNotNull(resolver.current());\n        } else {\n            assertNull(resolver.current());\n        }\n    }\n\n    @Test\n    public void testGetPriority() {\n        assertEquals(1, resolver.getPriority());\n    }\n}"
