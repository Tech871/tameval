[meta]
task = "repair"
scenario = "repair_missed_asserts"

[lang_info]
lang = "Java"
java_version = "11"
java_builder = "Maven"
is_multi_module = false

[repo_info]
repository = "pkiraly/qa-catalogue"
sha = "c430287d110d6633beb02dc886e06d4586dab317"

[run_info]
docker_image = "maven:3.8.4-openjdk-11"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -Dtest=MarcSpecSelectorTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -DtargetClasses=**.MarcSpecSelector  -DtargetTests=**.MarcSpecSelectorTest  -DoutputFormats=XML"
coverage_report_path = "target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0.0
original_coverage = 89.0
mutation_kill_rate = 0
original_mutation_kill_rate = 60.0
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "src/test/java/de/gwdg/metadataqa/marc/cli/utils/MarcSpecSelectorTest.java"
focal_file_path = "src/main/java/de/gwdg/metadataqa/marc/cli/utils/MarcSpecSelector.java"
test_file_url = "https://github.com/pkiraly/qa-catalogue/blob/c430287d110d6633beb02dc886e06d4586dab317/src/test/java/de/gwdg/metadataqa/marc/cli/utils/MarcSpecSelectorTest.java"
focal_file_url = "https://github.com/pkiraly/qa-catalogue/blob/c430287d110d6633beb02dc886e06d4586dab317/src/main/java/de/gwdg/metadataqa/marc/cli/utils/MarcSpecSelector.java"
first_commit_date = "2023-05-02"
last_commit_date = "2025-03-15"
test_file_content = "package de.gwdg.metadataqa.marc.cli.utils;\n\nimport de.gwdg.metadataqa.api.model.XmlFieldInstance;\nimport de.gwdg.metadataqa.marc.dao.DataField;\nimport de.gwdg.metadataqa.marc.dao.record.BibliographicRecord;\nimport de.gwdg.metadataqa.marc.dao.record.Marc21BibliographicRecord;\nimport de.gwdg.metadataqa.marc.dao.record.UnimarcRecord;\nimport de.gwdg.metadataqa.marc.definition.tags.tags20x.Tag245;\nimport org.junit.Test;\n\nimport static org.junit.Assert.*;\n\npublic class MarcSpecSelectorTest {\n\n  BibliographicRecord marcRecord;\n  MarcSpecSelector selector;\n\n  private void setUp_marc21() {\n    marcRecord = new Marc21BibliographicRecord(\"u2407796\");\n    marcRecord.addDataField(new DataField(\n      Tag245.getInstance(),\n      \"0\", \"0\",\n      \"a\", \"Mario und der Zauberer\"\n    ));\n    selector = new MarcSpecSelector(marcRecord);\n  }\n\n  private void setUp_unimarc() {\n    marcRecord = new UnimarcRecord(\"u2407796\");\n    marcRecord.addDataField(new DataField(\n      Tag245.getInstance(),\n      \"0\", \"0\",\n      \"a\", \"Mario und der Zauberer\"\n    ));\n    selector = new MarcSpecSelector(marcRecord);\n  }\n\n  @Test\n  public void get_marc21() {\n    setUp_marc21();\n    XmlFieldInstance fieldInstance = selector.get(\"245$a\").get(0);\n  }\n\n  @Test\n  public void extract_marc21() {\n    setUp_marc21();\n  }\n\n  @Test\n  public void get_unimarc() {\n    setUp_unimarc();\n    XmlFieldInstance fieldInstance = selector.get(\"245$a\").get(0);\n  }\n\n  @Test\n  public void extract_unimarc() {\n    setUp_unimarc();\n  }\n}"
