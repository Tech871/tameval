[meta]
task = "create"
scenario = "from_scratch"

[lang_info]
lang = "Go"
go_version = "1.24"

[repo_info]
repository = "armadaproject/armada"
sha = "5765dcb8fc87b811dfe3cdf254e04c6587afa142"

[run_info]
docker_image = "golang:1.24"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/avito-tech/go-mutesting/cmd/go-mutesting@latest && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out internal/scheduler/adapters/adapters.go internal/scheduler/adapters/adapters_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting internal/scheduler/adapters/adapters.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 0.0
original_coverage = 85.0
mutation_kill_rate = 0.0
original_mutation_kill_rate = 100.0
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "internal/scheduler/adapters/adapters_test.go"
focal_file_path = "internal/scheduler/adapters/adapters.go"
test_file_url = "https://github.com/armadaproject/armada/blob/5765dcb8fc87b811dfe3cdf254e04c6587afa142/internal/scheduler/adapters/adapters_test.go"
focal_file_url = "https://github.com/armadaproject/armada/blob/5765dcb8fc87b811dfe3cdf254e04c6587afa142/internal/scheduler/adapters/adapters.go"
first_commit_date = "2023-01-23"
last_commit_date = "2025-02-10"
test_file_content = ""
