[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Java"
java_version = "17"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "GIScience/openrouteservice"
sha = "58549a4d0a2affe96463f3ef81081dd95411b243"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl ors-benchmark -Dtest=RouteTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl ors-benchmark -DtargetClasses=**.Route  -DtargetTests=**.RouteTest  -DoutputFormats=XML"
coverage_report_path = "ors-benchmark/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "ors-benchmark/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 88.0
original_coverage = 96.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 8, 9, 10, 11, 12, 13, 16, 20, 24, 28, 33, 36, 39, 40, 46, 47, 48, 49, 50, 51, 52,]
missed_lines = [ 34, 37, 41,]

[input_info]
test_file_path = "ors-benchmark/src/test/java/org/heigit/ors/coordinates_generator/model/RouteTest.java"
focal_file_path = "ors-benchmark/src/main/java/org/heigit/ors/coordinates_generator/model/Route.java"
test_file_url = "https://github.com/GIScience/openrouteservice/blob/58549a4d0a2affe96463f3ef81081dd95411b243/ors-benchmark/src/test/java/org/heigit/ors/coordinates_generator/model/RouteTest.java"
focal_file_url = "https://github.com/GIScience/openrouteservice/blob/58549a4d0a2affe96463f3ef81081dd95411b243/ors-benchmark/src/main/java/org/heigit/ors/coordinates_generator/model/Route.java"
first_commit_date = "2025-03-19"
last_commit_date = "2025-03-19"
test_file_content = "package org.heigit.ors.coordinates_generator.model;\n\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass RouteTest {\n\n    @Test\n    void testRouteConstruction() {\n        double[] start = {8.681495, 49.41461};\n        double[] end = {8.686507, 49.41943};\n        double distance = 1500.5;\n        String profile = \"driving-car\";\n\n        Route route = new Route(start, end, distance, profile);\n\n        assertNotNull(route);\n        assertArrayEquals(start, route.getStart());\n        assertArrayEquals(end, route.getEnd());\n        assertEquals(distance, route.getDistance());\n        assertEquals(profile, route.getProfile());\n    }\n\n\n\n    @Test\n    void testRouteNotEqualsWithDifferentEnd() {\n        double[] start = {8.681495, 49.41461};\n        double[] end1 = {8.686507, 49.41943};\n        double[] end2 = {8.687000, 49.42000};\n        double distance = 1500.5;\n        String profile = \"driving-car\";\n\n        Route route1 = new Route(start, end1, distance, profile);\n        Route route2 = new Route(start, end2, distance, profile);\n\n        assertNotEquals(route1, route2);\n        assertNotEquals(route1.hashCode(), route2.hashCode());\n    }\n\n\n\n\n\n}\n"
