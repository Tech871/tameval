[meta]
task = "update"
scenario = "update_test"

[lang_info]
lang = "Python"
python_version = "3.13"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "redruin1/factorio-draftsman"
sha = "4a795c6530c6d5ea2571c8a234164da22928a4a1"

[run_info]
docker_image = "python:3.13"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "pip install -r requirements.txt && (pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=draftsman/constants.py -m pytest -q --junit-xml=test_output.xml test/test_constants.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target draftsman.constants --unit-test test.test_constants --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target draftsman/constants.py --unit-test test/test_constants.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 87.0
original_coverage = 88.0
mutation_kill_rate = 25.0
original_mutation_kill_rate = 32.0
covered_lines = [ 6, 7, 10, 11, 12, 13, 14, 15, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 54, 56, 74, 76, 95, 97, 110, 151, 163, 175, 177, 196, 197, 217, 219, 223, 235, 238, 240, 251, 254, 262, 263, 264, 265, 266, 267, 268, 269, 271, 282, 284, 302, 304, 323, 325, 337, 349, 351, 370, 371, 383, 385, 389, 401, 404, 407, 412, 413, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 449, 450, 454, 474, 498, 521, 529, 535, 543, 549, 550, 552, 553, 557, 565, 568, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 599, 600, 603, 604, 607, 608, 615, 616, 621, 622, 625, 626, 631, 632, 638, 639, 642, 643, 648, 649, 654, 655, 658, 659, 662, 663, 670, 671, 682, 683, 686, 687, 690, 691, 695, 696, 699, 700, 705, 706, 712, 713, 718, 719, 723, 724, 730, 731, 737, 738, 742, 743, 746, 747, 752, 753, 758, 759, 762, 763, 768, 769, 774, 775, 778, 779, 782, 783, 786, 787, 792, 793, 799, 800, 801, 802, 804, 805, 833, 834, 840, 841, 845, 846, 849, 850, 853, 854, 857, 858, 862, 863, 866, 867, 870, 871, 876, 877, 880, 881, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 909, 910, 914, 915, 918, 919, 923, 924, 928, 929, 932, 933, 936, 937, 940, 941, 944, 945, 950, 951, 957, 958, 961, 962, 967, 968, 974, 975, 978, 979, 980, 985, 986, 991, 992, 999, 1000, 1007, 1008, 1013, 1016, 1023, 1031, 1032, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,]
missed_lines = [ 103, 104, 105, 106, 108, 111, 149, 452, 472, 493, 494, 496, 516, 517, 522, 523, 524, 525, 527, 530, 531, 533, 536, 537, 538, 539, 541, 544, 545, 547, 551, 555, 558, 559, 560, 561, 563, 566, 571, 572, 574, 575, 826, 1014, 1017, 1018, 1021, 1024, 1025, 1028,]

[input_info]
test_file_path = "test/test_constants.py"
focal_file_path = "draftsman/constants.py"
test_file_url = "https://github.com/redruin1/factorio-draftsman/blob/4a795c6530c6d5ea2571c8a234164da22928a4a1/test/test_constants.py"
focal_file_url = "https://github.com/redruin1/factorio-draftsman/blob/4a795c6530c6d5ea2571c8a234164da22928a4a1/draftsman/constants.py"
first_commit_date = "2022-03-05"
last_commit_date = "2025-08-11"
test_file_content = "# test_constants.py\n\nfrom draftsman.constants import Direction, LegacyDirection\nfrom draftsman.utils import Vector\n\n\ndef test_opposite_direction():\n    assert Direction.NORTH.opposite() is Direction.SOUTH\n\n    assert LegacyDirection.NORTH.opposite() is LegacyDirection.SOUTH\n\n\ndef test_next_direction():\n    assert Direction.NORTH.next() is Direction.EAST\n    assert Direction.NORTH.next(eight_way=True) is Direction.NORTHEAST\n\n    assert LegacyDirection.NORTH.next() is LegacyDirection.EAST\n    assert LegacyDirection.NORTH.next(eight_way=True) is LegacyDirection.NORTHEAST\n\n\ndef test_previous_direction():\n    assert Direction.NORTH.previous() is Direction.WEST\n    assert Direction.NORTH.previous(eight_way=True) is Direction.NORTHWEST\n\n    assert LegacyDirection.NORTH.previous() is LegacyDirection.WEST\n    assert LegacyDirection.NORTH.previous(eight_way=True) is LegacyDirection.NORTHWEST\n\n\ndef test_direction_to_orientation():\n    assert Direction.NORTH.to_orientation() == 0.0\n    assert Direction.SOUTH.to_orientation() == 0.5\n\n    assert LegacyDirection.NORTH.to_orientation() == 0.0\n    assert LegacyDirection.SOUTH.to_orientation() == 0.5\n\n\ndef test_direction_to_vector():\n    assert Direction.EAST.to_vector() == Vector(1, 0)\n    assert LegacyDirection.EAST.to_vector() == Vector(1, 0)\n\n\ndef test_direction_conversion():\n    assert Direction.NORTH.to_legacy() is LegacyDirection.NORTH\n\n    assert LegacyDirection.SOUTH.to_modern() is Direction.SOUTH"
