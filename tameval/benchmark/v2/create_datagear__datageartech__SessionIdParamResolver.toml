[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Java"
java_version = "1.8"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "datageartech/datagear"
sha = "0cde3799fad38f74d53c73e087b0e3296237e466"

[run_info]
docker_image = "maven:3.8.6-jdk-8"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl datagear-web -Dtest=SessionIdParamResolverTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl datagear-web -DtargetClasses=**.SessionIdParamResolver  -DtargetTests=**.SessionIdParamResolverTest  -DoutputFormats=XML"
coverage_report_path = "datagear-web/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "datagear-web/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 85.0
original_coverage = 85.0
mutation_kill_rate = 37.0
original_mutation_kill_rate = 37.0
covered_lines = [ 43, 47, 48, 57, 58, 85, 86, 87, 89, 91, 93, 95, 98, 100, 101, 103, 107, 141, 143, 145, 146, 148, 150, 151, 153, 155, 156, 158, 159, 161, 164, 165, 167, 170, 172, 173, 175, 176, 178, 180, 185,]
missed_lines = [ 52, 69, 70, 119, 130, 162, 168,]

[input_info]
test_file_path = "datagear-web/src/test/java/org/datagear/web/util/SessionIdParamResolverTest.java"
focal_file_path = "datagear-web/src/main/java/org/datagear/web/util/SessionIdParamResolver.java"
test_file_url = "https://github.com/datageartech/datagear/blob/0cde3799fad38f74d53c73e087b0e3296237e466/datagear-web/src/test/java/org/datagear/web/util/SessionIdParamResolverTest.java"
focal_file_url = "https://github.com/datageartech/datagear/blob/0cde3799fad38f74d53c73e087b0e3296237e466/datagear-web/src/main/java/org/datagear/web/util/SessionIdParamResolver.java"
first_commit_date = "2023-12-14"
last_commit_date = "2024-03-15"
test_file_content = "/*\n * Copyright 2018-present datagear.tech\n *\n * This file is part of DataGear.\n *\n * DataGear is free software: you can redistribute it and/or modify it under the terms of\n * the GNU Lesser General Public License as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n *\n * DataGear is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License along with DataGear.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n\npackage org.datagear.web.util;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.util.List;\n\nimport org.junit.Test;\n\n/**\n * {@linkplain SessionIdParamResolver}单元测试类。\n * \n * @author datagear@163.com\n *\n */\npublic class SessionIdParamResolverTest\n{\n\t@Test\n\tpublic void addSessionIdTest()\n\t{\n\t\t// 默认参数名\n\t\t{\n\t\t\tSessionIdParamResolver spr = new SessionIdParamResolver();\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;jsessionid=123456\", url);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b?p=v\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;jsessionid=123456?p=v\", url);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b#anchor\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;jsessionid=123456#anchor\", url);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b?p=v#anchor\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;jsessionid=123456?p=v#anchor\", url);\n\t\t\t}\n\t\t}\n\n\t\t// 自定义参数名\n\t\t{\n\t\t\tSessionIdParamResolver spr = new SessionIdParamResolver();\n\t\t\tspr.setSessionIdParamName(\"sid\");\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;sid=123456\", url);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b?p=v\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;sid=123456?p=v\", url);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b#anchor\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;sid=123456#anchor\", url);\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tString url = spr.addSessionId(\"/a/b?p=v#anchor\", \"123456\");\n\t\t\t\tassertEquals(\"/a/b;sid=123456?p=v#anchor\", url);\n\t\t\t}\n\t\t}\n\t}\n\n\t@Test\n\tpublic void resolveSessionIdsTest()\n\t{\n\t\tSessionIdParamResolver spr = new SessionIdParamResolver();\n\n\t\t// 没有\n\t\t{\n\t\t\t{\n\t\t\t\tString url = \"/a/b\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b?p=v\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b#anchor\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b?p=v#anchor\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid?q=v\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid#anchor\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid?q=v#anchor\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid=\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid=?q=v\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid=#anchor\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;jsessionid=?q=v#anchor\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t\t{\n\t\t\t\tString url = \"/a/b;pp=vv?q=v#anchor\";\n\t\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\t\tassertEquals(0, sids.size());\n\t\t\t}\n\t\t}\n\n\t\t// 有\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(1, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456?q=v\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(1, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456#anchor\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(1, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456?q=v#anchor\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(1, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456;jsessionid=789\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(2, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t\tassertEquals(\"789\", sids.get(1));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456;jsessionid=789?q=v\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(2, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t\tassertEquals(\"789\", sids.get(1));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456;jsessionid=789#anchor\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(2, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t\tassertEquals(\"789\", sids.get(1));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456;jsessionid=789?q=v#anchor\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(2, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t\tassertEquals(\"789\", sids.get(1));\n\t\t}\n\t\t{\n\t\t\tString url = \"/a/b;jsessionid=123456;jsessionid=789;pp=vv?q=v#anchor\";\n\t\t\tList<String> sids = spr.resolveSessionIds(url);\n\t\t\tassertEquals(2, sids.size());\n\t\t\tassertEquals(\"123456\", sids.get(0));\n\t\t\tassertEquals(\"789\", sids.get(1));\n\t\t}\n\t}\n}\n"
