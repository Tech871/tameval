[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Python"
python_version = "3.13"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "youtype/mypy_boto3_builder"
sha = "098fadc5ab3152e2c85008a592ac975328a9fca8"
bench_version = 2

[run_info]
docker_image = "python:3.13"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "pip install -r requirements.mkdocs.txt && (pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=mypy_boto3_builder/import_helpers/import_record_group.py -m pytest -q --junit-xml=test_output.xml tests/import_helpers/test_import_record_group.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target mypy_boto3_builder.import_helpers.import_record_group --unit-test tests.import_helpers.test_import_record_group --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target mypy_boto3_builder/import_helpers/import_record_group.py --unit-test tests/import_helpers/test_import_record_group.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 91.0
original_coverage = 98.0
mutation_kill_rate = 93.0
original_mutation_kill_rate = 100.0
covered_lines = [ 6, 7, 9, 10, 13, 18, 20, 21, 22, 24, 28, 29, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 53, 54, 55, 57, 61, 64, 66, 70, 71, 72, 87, 91, 92, 93, 94, 95, 96, 97, 106, 110, 111, 112, 113,]
missed_lines = [ 30, 47, 73, 74, 75,]

[input_info]
test_file_path = "tests/import_helpers/test_import_record_group.py"
focal_file_path = "mypy_boto3_builder/import_helpers/import_record_group.py"
test_file_url = "https://github.com/youtype/mypy_boto3_builder/blob/098fadc5ab3152e2c85008a592ac975328a9fca8/tests/import_helpers/test_import_record_group.py"
focal_file_url = "https://github.com/youtype/mypy_boto3_builder/blob/098fadc5ab3152e2c85008a592ac975328a9fca8/mypy_boto3_builder/import_helpers/import_record_group.py"
first_commit_date = "2020-01-23"
last_commit_date = "2025-01-06"
test_file_content = "from mypy_boto3_builder.import_helpers.import_record import ImportRecord\nfrom mypy_boto3_builder.import_helpers.import_record_group import ImportRecordGroup\nfrom mypy_boto3_builder.import_helpers.import_string import ImportString\n\n\nclass TestImportRecordGroup:\n\n\n\n\n    def test_min_version(self) -> None:\n        group = ImportRecordGroup(\n            [\n                ImportRecord(\n                    ImportString(\"typing\"),\n                    \"Literal\",\n                    min_version=(3, 12),\n                    fallback=ImportRecord(ImportString(\"typing_extensions\"), \"Literal\"),\n                ),\n                ImportRecord(\n                    ImportString(\"typing\"),\n                    \"Unpack\",\n                    min_version=(3, 12),\n                    fallback=ImportRecord(ImportString(\"typing_extensions\"), \"Unpack\"),\n                ),\n                ImportRecord(\n                    ImportString(\"boto3\", \"s3\", \"transfer\"),\n                    \"TransferConfig\",\n                ),\n            ],\n        )\n        assert list(group) == [\n            \"import sys\",\n            \"from boto3.s3.transfer import TransferConfig\",\n            (\n                \"if sys.version_info >= (3, 12):\"\n                \"\\n    from typing import Literal, Unpack\"\n                \"\\nelse:\"\n                \"\\n    from typing_extensions import Literal, Unpack\"\n            ),\n        ]\n"
