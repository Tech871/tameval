[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Go"
go_version = "1.23.0"

[repo_info]
repository = "bufbuild/buf"
sha = "37b5a2a496a2279aa03507be64cba00193644a1e"

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out private/buf/bufconvert/bufconvert.go private/buf/bufconvert/bufconvert_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting private/buf/bufconvert/bufconvert.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 83.33
original_coverage = 76.0
mutation_kill_rate = 70.0
original_mutation_kill_rate = nan
covered_lines = [ 35, 36, 37, 43, 44, 45, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 71, 72, 76, 77, 78, 79, 81, 84, 85, 89, 90, 91, 92, 94, 97, 98, 102, 103, 104, 105, 107, 110, 111, 115, 116, 117, 118, 120, 123, 124, 125, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 153, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 175, 176, 177, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 205, 206, 207, 208,]
missed_lines = [ 47, 48, 49, 53, 54, 55, 73, 74, 75, 86, 87, 88, 99, 100, 101, 112, 113, 114, 131, 132, 133, 141, 142, 143, 149, 150, 151, 152, 154, 155, 156, 157, 178, 179, 180, 181, 197, 202, 203, 204, 210,]

[input_info]
test_file_path = "private/buf/bufconvert/bufconvert_test.go"
focal_file_path = "private/buf/bufconvert/bufconvert.go"
test_file_url = "https://github.com/bufbuild/buf/blob/37b5a2a496a2279aa03507be64cba00193644a1e/private/buf/bufconvert/bufconvert_test.go"
focal_file_url = "https://github.com/bufbuild/buf/blob/37b5a2a496a2279aa03507be64cba00193644a1e/private/buf/bufconvert/bufconvert.go"
first_commit_date = "2022-02-28"
last_commit_date = "2025-01-02"
test_file_content = "// Copyright 2020-2025 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage bufconvert\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n\n\t\"github.com/bufbuild/buf/private/bufpkg/bufimage\"\n\t\"github.com/google/uuid\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n\t\"google.golang.org/protobuf/proto\"\n\t\"google.golang.org/protobuf/reflect/protoreflect\"\n\t\"google.golang.org/protobuf/types/descriptorpb\"\n)\n\nfunc TestImageWithoutMessageSetWireFormatResolution(t *testing.T) {\n\tt.Parallel()\n\tfile := getTestFileWithMessageSets()\n\timageFile, err := bufimage.NewImageFile(\n\t\tfile,\n\t\tnil,\n\t\tuuid.UUID{},\n\t\tfile.GetName(),\n\t\tfile.GetName(),\n\t\tfalse,\n\t\tfalse,\n\t\tnil,\n\t)\n\trequire.NoError(t, err)\n\timage, err := bufimage.NewImage([]bufimage.ImageFile{imageFile})\n\trequire.NoError(t, err)\n\n\tnoResolveImage := ImageWithoutMessageSetWireFormatResolution(image)\n\t// assert.Same only supported pointers and not other reference types like slices :/\n\tassert.Equal(t, reflect.ValueOf(image.Files()).Pointer(), reflect.ValueOf(noResolveImage.Files()).Pointer())\n\n\tchecker := resultChecker{t}\n\tchecker.succeeds(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.Baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.MessageSetBaz\"))\n\tchecker.fails(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.ContainsMessageSetBaz\"))\n\tchecker.fails(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.IndirectContainsMessageSetBaz\"))\n\tchecker.succeeds(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.message_set_baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.contains_message_set_baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.indirect_contains_message_set_baz\"))\n\tchecker.succeeds(noResolveImage.Resolver().FindDescriptorByName(\"foo.bar.Enum\"))\n\n\tchecker.succeeds(noResolveImage.Resolver().FindMessageByName(\"foo.bar.Baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindMessageByName(\"foo.bar.MessageSetBaz\"))\n\tchecker.fails(noResolveImage.Resolver().FindMessageByName(\"foo.bar.ContainsMessageSetBaz\"))\n\tchecker.fails(noResolveImage.Resolver().FindMessageByName(\"foo.bar.IndirectContainsMessageSetBaz\"))\n\n\tchecker.succeeds(noResolveImage.Resolver().FindMessageByURL(\"type.googleapis.com/foo.bar.Baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindMessageByURL(\"type.googleapis.com/foo.bar.MessageSetBaz\"))\n\tchecker.fails(noResolveImage.Resolver().FindMessageByURL(\"type.googleapis.com/foo.bar.ContainsMessageSetBaz\"))\n\tchecker.fails(noResolveImage.Resolver().FindMessageByURL(\"type.googleapis.com/foo.bar.IndirectContainsMessageSetBaz\"))\n\n\tchecker.succeeds(noResolveImage.Resolver().FindExtensionByName(\"foo.bar.str\"))\n\tchecker.succeeds(noResolveImage.Resolver().FindExtensionByName(\"foo.bar.baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindExtensionByName(\"foo.bar.message_set_baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindExtensionByName(\"foo.bar.contains_message_set_baz\"))\n\tchecker.fails(noResolveImage.Resolver().FindExtensionByName(\"foo.bar.indirect_contains_message_set_baz\"))\n\n\tchecker.succeeds(noResolveImage.Resolver().FindExtensionByNumber(\"foo.bar.Baz\", 10101))\n\tchecker.succeeds(noResolveImage.Resolver().FindExtensionByNumber(\"foo.bar.Baz\", 10102))\n\tchecker.fails(noResolveImage.Resolver().FindExtensionByNumber(\"foo.bar.Baz\", 10103))\n\tchecker.fails(noResolveImage.Resolver().FindExtensionByNumber(\"foo.bar.Baz\", 10104))\n\tchecker.fails(noResolveImage.Resolver().FindExtensionByNumber(\"foo.bar.Baz\", 10105))\n\n\tchecker.succeeds(noResolveImage.Resolver().FindEnumByName(\"foo.bar.Enum\"))\n}\n\n\ntype resultChecker struct {\n\tt *testing.T\n}\n\nfunc (c resultChecker) succeeds(result any, err error) {\n\tc.t.Helper()\n\trequire.NoError(c.t, err)\n\trequire.NotNil(c.t, result)\n}\n\nfunc (c resultChecker) fails(_ any, err error) {\n\tc.t.Helper()\n\tvar msgSetErr *messageSetNotSupportedError\n\trequire.ErrorAs(c.t, err, &msgSetErr)\n}\n\nfunc doFindMessageInFile(t *testing.T, name protoreflect.FullName, file *descriptorpb.FileDescriptorProto, expectToFind bool) {\n\tt.Helper()\n\tdescriptor := findMessageInFile(name, file)\n\tif !expectToFind {\n\t\trequire.Nil(t, descriptor)\n\t\treturn\n\t}\n\trequire.NotNil(t, descriptor)\n\trequire.Equal(t, descriptor.GetName(), string(name.Name()))\n}\n\nfunc getTestFile(pkg string) *descriptorpb.FileDescriptorProto {\n\tvar protoPkg *string\n\tif pkg != \"\" {\n\t\tprotoPkg = proto.String(pkg)\n\t}\n\treturn &descriptorpb.FileDescriptorProto{\n\t\tName:    proto.String(\"test.proto\"),\n\t\tPackage: protoPkg,\n\t\tMessageType: []*descriptorpb.DescriptorProto{\n\t\t\t{\n\t\t\t\tName: proto.String(\"Foo\"),\n\t\t\t\tNestedType: []*descriptorpb.DescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName: proto.String(\"Frob\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName: proto.String(\"Nitz\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tName: proto.String(\"Bar\"),\n\t\t\t\tNestedType: []*descriptorpb.DescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName: proto.String(\"Fizz\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName: proto.String(\"Buzz\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tName: proto.String(\"Baz\"),\n\t\t\t\tNestedType: []*descriptorpb.DescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName: proto.String(\"Abc\"),\n\t\t\t\t\t\tNestedType: []*descriptorpb.DescriptorProto{\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tName: proto.String(\"Xyz\"),\n\t\t\t\t\t\t\t\tNestedType: []*descriptorpb.DescriptorProto{\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tName: proto.String(\"Deeper\"),\n\t\t\t\t\t\t\t\t\t\tNestedType: []*descriptorpb.DescriptorProto{\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tName: proto.String(\"AndDeeper\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n}\n\nfunc getTestFileWithMessageSets() *descriptorpb.FileDescriptorProto {\n\treturn &descriptorpb.FileDescriptorProto{\n\t\tName:    proto.String(\"test.proto\"),\n\t\tPackage: proto.String(\"foo.bar\"),\n\t\tMessageType: []*descriptorpb.DescriptorProto{\n\t\t\t{\n\t\t\t\tName: proto.String(\"Baz\"),\n\t\t\t\tExtensionRange: []*descriptorpb.DescriptorProto_ExtensionRange{\n\t\t\t\t\t{Start: proto.Int32(100), End: proto.Int32(99999)},\n\t\t\t\t},\n\t\t\t\tField: []*descriptorpb.FieldDescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:   proto.String(\"name\"),\n\t\t\t\t\t\tNumber: proto.Int32(1),\n\t\t\t\t\t\tLabel:  descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\t\t\tType:   descriptorpb.FieldDescriptorProto_TYPE_STRING.Enum(),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:     proto.String(\"fizz\"),\n\t\t\t\t\t\tNumber:   proto.Int32(2),\n\t\t\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\t\t\tTypeName: proto.String(\".foo.bar.Fizz\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tName:     proto.String(\"buzz\"),\n\t\t\t\t\t\tNumber:   proto.Int32(3),\n\t\t\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_REPEATED.Enum(),\n\t\t\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\t\t\tTypeName: proto.String(\".foo.bar.Buzz\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tName:    proto.String(\"Fizz\"),\n\t\t\t\tOptions: &descriptorpb.MessageOptions{Deprecated: proto.Bool(true)},\n\t\t\t},\n\t\t\t{\n\t\t\t\tName: proto.String(\"Buzz\"),\n\t\t\t},\n\t\t\t{\n\t\t\t\tName:    proto.String(\"MessageSetBaz\"),\n\t\t\t\tOptions: &descriptorpb.MessageOptions{MessageSetWireFormat: proto.Bool(true)},\n\t\t\t\tExtensionRange: []*descriptorpb.DescriptorProto_ExtensionRange{\n\t\t\t\t\t{Start: proto.Int32(1), End: proto.Int32(9999999)},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tName: proto.String(\"ContainsMessageSetBaz\"),\n\t\t\t\tField: []*descriptorpb.FieldDescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:     proto.String(\"baz\"),\n\t\t\t\t\t\tNumber:   proto.Int32(1),\n\t\t\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\t\t\tTypeName: proto.String(\".foo.bar.MessageSetBaz\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tName: proto.String(\"IndirectContainsMessageSetBaz\"),\n\t\t\t\tField: []*descriptorpb.FieldDescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:     proto.String(\"bazes\"),\n\t\t\t\t\t\tNumber:   proto.Int32(1),\n\t\t\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_REPEATED.Enum(),\n\t\t\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\t\t\tTypeName: proto.String(\".foo.bar.IndirectContainsMessageSetBaz.BazesEntry\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tNestedType: []*descriptorpb.DescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:    proto.String(\"BazesEntry\"),\n\t\t\t\t\t\tOptions: &descriptorpb.MessageOptions{MapEntry: proto.Bool(true)},\n\t\t\t\t\t\tField: []*descriptorpb.FieldDescriptorProto{\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tName:   proto.String(\"key\"),\n\t\t\t\t\t\t\t\tNumber: proto.Int32(1),\n\t\t\t\t\t\t\t\tLabel:  descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\t\t\t\t\tType:   descriptorpb.FieldDescriptorProto_TYPE_STRING.Enum(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tName:     proto.String(\"value\"),\n\t\t\t\t\t\t\t\tNumber:   proto.Int32(2),\n\t\t\t\t\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\t\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\t\t\t\t\tTypeName: proto.String(\".foo.bar.ContainsMessageSetBaz\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tEnumType: []*descriptorpb.EnumDescriptorProto{\n\t\t\t{\n\t\t\t\tName: proto.String(\"Enum\"),\n\t\t\t\tValue: []*descriptorpb.EnumValueDescriptorProto{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:   proto.String(\"ZERO\"),\n\t\t\t\t\t\tNumber: proto.Int32(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tExtension: []*descriptorpb.FieldDescriptorProto{\n\t\t\t{\n\t\t\t\tExtendee: proto.String(\".foo.bar.Baz\"),\n\t\t\t\tName:     proto.String(\"str\"),\n\t\t\t\tNumber:   proto.Int32(10101),\n\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_STRING.Enum(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tExtendee: proto.String(\".foo.bar.Baz\"),\n\t\t\t\tName:     proto.String(\"baz\"),\n\t\t\t\tNumber:   proto.Int32(10102),\n\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\tTypeName: proto.String(\".foo.bar.Baz\"),\n\t\t\t},\n\t\t\t{\n\t\t\t\tExtendee: proto.String(\".foo.bar.Baz\"),\n\t\t\t\tName:     proto.String(\"message_set_baz\"),\n\t\t\t\tNumber:   proto.Int32(10103),\n\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\tTypeName: proto.String(\".foo.bar.MessageSetBaz\"),\n\t\t\t},\n\t\t\t{\n\t\t\t\tExtendee: proto.String(\".foo.bar.Baz\"),\n\t\t\t\tName:     proto.String(\"contains_message_set_baz\"),\n\t\t\t\tNumber:   proto.Int32(10104),\n\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\tTypeName: proto.String(\".foo.bar.ContainsMessageSetBaz\"),\n\t\t\t},\n\t\t\t{\n\t\t\t\tExtendee: proto.String(\".foo.bar.Baz\"),\n\t\t\t\tName:     proto.String(\"indirect_contains_message_set_baz\"),\n\t\t\t\tNumber:   proto.Int32(10105),\n\t\t\t\tLabel:    descriptorpb.FieldDescriptorProto_LABEL_OPTIONAL.Enum(),\n\t\t\t\tType:     descriptorpb.FieldDescriptorProto_TYPE_MESSAGE.Enum(),\n\t\t\t\tTypeName: proto.String(\".foo.bar.IndirectContainsMessageSetBaz\"),\n\t\t\t},\n\t\t},\n\t}\n}\n"
