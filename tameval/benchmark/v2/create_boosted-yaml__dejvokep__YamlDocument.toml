[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Java"
java_version = "8"
java_builder = "Maven"
is_multi_module = false

[repo_info]
repository = "dejvokep/boosted-yaml"
sha = "fd45ba039337485d5081ba47c1a1116e52a3160c"

[run_info]
docker_image = "maven:3.8.6-jdk-8"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install && mvn -Dmaven.repo.local=/.m2 -T 4 clean package"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -Dtest=YamlDocumentTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -DtargetClasses=**.YamlDocument  -DtargetTests=**.YamlDocumentTest  -DoutputFormats=XML"
coverage_report_path = "target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 45.0
original_coverage = 67.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 87, 90, 91, 92, 96, 97, 121, 124, 125, 126, 129, 130, 154, 155, 158, 159, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 204, 207, 208, 224, 226, 233, 241, 243, 244, 271, 272, 288, 291, 293, 295, 296, 299, 301, 303, 305, 308, 311, 313, 314, 332, 630, 640, 650, 682, 687, 772, 795,]
missed_lines = [ 93, 127, 156, 157, 166, 205, 228, 229, 235, 236, 237, 248, 250, 252, 256, 257, 304, 306, 316, 320, 322, 323, 324, 326, 330, 331, 357, 373, 374, 376, 377, 393, 394, 410, 411, 439, 440, 443, 444, 455, 457, 459, 470, 471, 481, 482, 491, 503, 505, 507, 510, 511, 513, 515, 518, 552, 553, 563, 564, 573, 574, 592, 593, 595, 596, 605, 606, 660, 670, 724, 749,]

[input_info]
test_file_path = "src/test/java/dev/dejvokep/boostedyaml/YamlDocumentTest.java"
focal_file_path = "src/main/java/dev/dejvokep/boostedyaml/YamlDocument.java"
test_file_url = "https://github.com/dejvokep/boosted-yaml/blob/fd45ba039337485d5081ba47c1a1116e52a3160c/src/test/java/dev/dejvokep/boostedyaml/YamlDocumentTest.java"
focal_file_url = "https://github.com/dejvokep/boosted-yaml/blob/fd45ba039337485d5081ba47c1a1116e52a3160c/src/main/java/dev/dejvokep/boostedyaml/YamlDocument.java"
first_commit_date = "2022-01-31"
last_commit_date = "2024-07-30"
test_file_content = "/*\n * Copyright 2024 https://dejvokep.dev/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage dev.dejvokep.boostedyaml;\n\nimport dev.dejvokep.boostedyaml.settings.dumper.DumperSettings;\nimport dev.dejvokep.boostedyaml.settings.general.GeneralSettings;\nimport dev.dejvokep.boostedyaml.settings.loader.LoaderSettings;\nimport dev.dejvokep.boostedyaml.settings.updater.UpdaterSettings;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.*;\nimport java.nio.charset.StandardCharsets;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass YamlDocumentTest {\n\n    @Test\n    void isRoot() throws IOException {\n        assertTrue(createFile().isRoot());\n    }\n\n\n\n\n\n    @Test\n    void getDumperSettings() throws IOException {\n        // Settings\n        DumperSettings settings = DumperSettings.builder().setLineBreak(\"\\n\\n\").build();\n        // Assert\n        Assertions.assertEquals(settings, YamlDocument.create(createStream(\"n: x\"), GeneralSettings.DEFAULT, LoaderSettings.DEFAULT, settings, UpdaterSettings.DEFAULT).getDumperSettings());\n    }\n\n\n\n    @Test\n    void getFile() throws IOException {\n        // File\n        File file = new File(\"file.yml\");\n        // Assert\n        assertEquals(file, YamlDocument.create(file, GeneralSettings.DEFAULT, LoaderSettings.builder().setCreateFileIfAbsent(false).build(), DumperSettings.DEFAULT, UpdaterSettings.DEFAULT).getFile());\n    }\n\n\n\n\n\n    private BufferedInputStream createStream(String content) {\n        return new BufferedInputStream(new ByteArrayInputStream(content.getBytes(StandardCharsets.UTF_8)));\n    }\n\n    private YamlDocument createFile() throws IOException {\n        return YamlDocument.create(new ByteArrayInputStream(\"x: 5\\ny:\\n  a: true\\n  b: abc\\n7: false\".getBytes(StandardCharsets.UTF_8)));\n    }\n\n}\n"
