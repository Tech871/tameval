[meta]
task = "repair"
scenario = "repair_missed_asserts"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "microsphere-projects/microsphere-java"
sha = "b4576dbd7bad0fe918d235617d466ccd5434cc66"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl microsphere-java-core -Dtest=TypeArgumentTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl microsphere-java-core -DtargetClasses=**.TypeArgument  -DtargetTests=**.TypeArgumentTest  -DoutputFormats=XML"
coverage_report_path = "microsphere-java-core/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "microsphere-java-core/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 28.0
original_coverage = 94.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 36, 39, 40, 41, 79,]
missed_lines = [ 37, 38, 45, 52, 56, 61, 62, 64, 66, 67, 72, 73, 74,]

[input_info]
test_file_path = "microsphere-java-core/src/test/java/io/microsphere/reflect/generics/TypeArgumentTest.java"
focal_file_path = "microsphere-java-core/src/main/java/io/microsphere/reflect/generics/TypeArgument.java"
test_file_url = "https://github.com/microsphere-projects/microsphere-java/blob/b4576dbd7bad0fe918d235617d466ccd5434cc66/microsphere-java-core/src/test/java/io/microsphere/reflect/generics/TypeArgumentTest.java"
focal_file_url = "https://github.com/microsphere-projects/microsphere-java/blob/b4576dbd7bad0fe918d235617d466ccd5434cc66/microsphere-java-core/src/main/java/io/microsphere/reflect/generics/TypeArgument.java"
first_commit_date = "2024-04-08"
last_commit_date = "2025-03-10"
test_file_content = "package io.microsphere.reflect.generics;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static io.microsphere.reflect.generics.TypeArgument.create;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\n/**\n * {@link TypeArgument} Test\n *\n * @author <a href=\"mailto:mercyblitz@gmail.com\">Mercy<a/>\n * @see TypeArgument\n * @since 1.0.0\n */\npublic class TypeArgumentTest {\n\n    private TypeArgument typeArgument;\n\n    @BeforeEach\n    public void init() {\n        typeArgument = create(String.class, 0);\n    }\n\n    @Test\n    public void testToString() {\n    }\n\n    @Test\n    public void testGetType() {\n    }\n\n    @Test\n    public void testGetIndex() {\n    }\n\n    @Test\n    public void testEquals() {\n    }\n\n    @Test\n    public void testEqualsOnSameType() {\n    }\n\n    @Test\n    public void testEqualsOnDifferentType() {\n    }\n\n    @Test\n    public void testHashCode() {\n    }\n\n    @Test\n    public void testHashCodeOnSameType() {\n    }\n\n    @Test\n    public void testHashCodeOnDifferentType() {\n    }\n\n    @Test\n    public void testCreateOnIllegalArgumentException() {\n    }\n}"
