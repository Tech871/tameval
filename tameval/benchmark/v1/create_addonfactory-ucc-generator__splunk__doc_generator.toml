[meta]
task = "create"
scenario = "extend_test_file"

[lang_info]
lang = "Python"
python_version = "3.13"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "splunk/addonfactory-ucc-generator"
sha = "0ceda52ad4ba2548071b64914a75aae987787a86"

[run_info]
docker_image = "python:3.13"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "(pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=splunk_add_on_ucc_framework/generators/doc_generator.py -m pytest -q --junit-xml=test_output.xml tests/unit/generators/test_doc_generator.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target splunk_add_on_ucc_framework.generators.doc_generator --unit-test tests.unit.generators.test_doc_generator --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target splunk_add_on_ucc_framework/generators/doc_generator.py --unit-test tests/unit/generators/test_doc_generator.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 94.0
original_coverage = 100.0
mutation_kill_rate = 50.0
original_mutation_kill_rate = 50.0
covered_lines = [ 15, 17, 20, 21, 22, 30, 31, 32, 33, 35, 38, 40, 44, 45, 51, 54,]
missed_lines = [ 55,]

[input_info]
test_file_path = "tests/unit/generators/test_doc_generator.py"
focal_file_path = "splunk_add_on_ucc_framework/generators/doc_generator.py"
test_file_url = "https://github.com/splunk/addonfactory-ucc-generator/blob/0ceda52ad4ba2548071b64914a75aae987787a86/tests/unit/generators/test_doc_generator.py"
focal_file_url = "https://github.com/splunk/addonfactory-ucc-generator/blob/0ceda52ad4ba2548071b64914a75aae987787a86/splunk_add_on_ucc_framework/generators/doc_generator.py"
first_commit_date = "2024-08-23"
last_commit_date = "2025-01-03"
test_file_content = "from unittest.mock import patch, mock_open, MagicMock\nfrom splunk_add_on_ucc_framework.generators import doc_generator\nfrom os.path import join\nfrom splunk_add_on_ucc_framework.generators.file_const import FileClass\n\n\nMOCKED_GEN_FILE_LIST = [\n    FileClass(\"file1.conf\", MagicMock(), \"some/path\", \"Conf file\"),\n    FileClass(\"file2.xml\", MagicMock(), [\"xml\", \"path\"], \"XML file\"),\n]\n\n\n@patch(\n    \"splunk_add_on_ucc_framework.generators.doc_generator.realpath\",\n    return_value=\"/fake/dir\",\n)\n@patch(\n    \"splunk_add_on_ucc_framework.generators.doc_generator.dirname\",\n    return_value=\"/fake/dir\",\n)\n@patch(\"builtins.open\", new_callable=mock_open)\n@patch.object(doc_generator, \"GEN_FILE_LIST\", MOCKED_GEN_FILE_LIST)\ndef test_generate_docs(mock_open, mock_dirname, mock_realpath):\n    doc_generator.generate_docs()\n\n    # Verify the correct file path is being opened\n    expected_path = join(\"/fake/dir\", \"docs\", \"generated_files.md\")\n    mock_open.assert_called_once_with(expected_path, \"w\")\n\n    # Check the content written to the file\n    written_content = \"\\n\".join(\n        [\n            \"---\",\n            \"title: UCC framework generated files\",\n            \"---\",\n            \"\",\n            \"The following table describes the files generated by UCC framework.\",\n            \"\",\n            \"| File Name  | File Location | File Description |\",\n            \"| ------------ | ------------ | ----------------- |\",\n            \"| file1.conf | output/&lt;YOUR_ADDON_NAME&gt;/some/path | Conf file |\",\n            \"| file2.xml | output/&lt;YOUR_ADDON_NAME&gt;/xml/path | XML file |\",\n            \"\\n\",\n        ]\n    )\n\n    mock_open().write.assert_called_once_with(written_content)\n\n\n\n\n# Test main function\n"
