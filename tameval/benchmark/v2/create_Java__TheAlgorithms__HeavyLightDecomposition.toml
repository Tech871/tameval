[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Java"
java_version = "21"
java_builder = "Maven"
is_multi_module = false

[repo_info]
repository = "TheAlgorithms/Java"
sha = "45148874e841c3b0db0a5a0d46e2871f30b0d3e0"

[run_info]
docker_image = "maven:3-amazoncorretto-21"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -Dtest=HeavyLightDecompositionTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -DtargetClasses=**.HeavyLightDecomposition  -DtargetTests=**.HeavyLightDecompositionTest  -DoutputFormats=XML"
coverage_report_path = "target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 78.0
original_coverage = 100.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 116, 117, 119, 120, 122, 123, 124, 125, 129, 130, 139, 144, 145, 149, 150, 151, 152, 154, 155,]
missed_lines = [ 45, 49, 102, 103, 104, 106, 107, 108, 110, 112, 113, 131, 132, 133, 134, 136, 137, 140, 141, 142,]

[input_info]
test_file_path = "src/test/java/com/thealgorithms/tree/HeavyLightDecompositionTest.java"
focal_file_path = "src/main/java/com/thealgorithms/tree/HeavyLightDecomposition.java"
test_file_url = "https://github.com/TheAlgorithms/Java/blob/45148874e841c3b0db0a5a0d46e2871f30b0d3e0/src/test/java/com/thealgorithms/tree/HeavyLightDecompositionTest.java"
focal_file_url = "https://github.com/TheAlgorithms/Java/blob/45148874e841c3b0db0a5a0d46e2871f30b0d3e0/src/main/java/com/thealgorithms/tree/HeavyLightDecomposition.java"
first_commit_date = "2025-02-17"
last_commit_date = "2025-02-17"
test_file_content = "package com.thealgorithms.tree;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nclass HeavyLightDecompositionTest {\n\n    private HeavyLightDecomposition hld;\n    private final int[] values = {0, 10, 20, 30, 40, 50};\n\n    /**\n     * Initializes the test environment with a predefined tree structure and values.\n     */\n    @BeforeEach\n    void setUp() {\n        hld = new HeavyLightDecomposition(5);\n        hld.addEdge(1, 2);\n        hld.addEdge(1, 3);\n        hld.addEdge(2, 4);\n        hld.addEdge(2, 5);\n        hld.initialize(1, values);\n    }\n\n    /**\n     * Verifies that the tree initializes successfully without errors.\n     */\n\n    /**\n     * Tests the maximum value query in the path between nodes.\n     */\n\n    /**\n     * Tests updating a node's value and ensuring it is reflected in queries.\n     */\n\n    /**\n     * Tests the maximum value query in a skewed tree structure.\n     */\n    @Test\n    void testSkewedTreeMaxQuery() {\n        assertEquals(40, hld.queryMaxInPath(1, 4), \"Max value in skewed tree (1,4) should be 40\");\n    }\n\n    /**\n     * Ensures query handles cases where u is a deeper node correctly.\n     */\n}\n"
