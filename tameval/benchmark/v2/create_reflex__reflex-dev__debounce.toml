[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Python"
python_version = "3.13"
python_cfg_file = "pyproject.toml"

[repo_info]
repository = "reflex-dev/reflex"
sha = "7acc7d9bb472d6e3a0e9df64bcbc5019d66fc788"

[run_info]
docker_image = "python:3.13"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -e PATH=_HOME_/.local/bin:$PATH -e PYTHONUSERBASE=_HOME_/.local/ -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = [ "PATH=_HOME_/.local/bin:$PATH", "PYTHONUSERBASE=_HOME_/.local/",]
prebuild_command = "(pip install .[all,test] && pip install git+https://github.com/Klema17/mutpy.git && pip install coverage pytest pytest_cov covdefaults Cython mock ddt pytest_mock testfixtures)"
test_run_command = "coverage run --include=reflex/components/core/debounce.py -m pytest -q --junit-xml=test_output.xml tests/units/components/core/test_debounce.py && coverage xml -o coverage.xml --fail-under=0"
mutation_run_command = "mut.py --target reflex.components.core.debounce --unit-test tests.units.components.core.test_debounce --runner pytest --report mutation_report.yaml"
mutation_run_command_fallback = "mut.py --target reflex/components/core/debounce.py --unit-test tests/units/components/core/test_debounce.py --runner pytest --report mutation_report.yaml"
coverage_report_path = "coverage.xml"
coverage_report_type = "cobertura"
mutation_report_path = "mutation_report.yaml"
mutation_report_type = "mutpy"

[coverage]
coverage = 91.0
original_coverage = 100.0
mutation_kill_rate = 33.0
original_mutation_kill_rate = 33.0
covered_lines = [ 2, 4, 6, 7, 8, 9, 10, 12, 15, 23, 24, 25, 28, 31, 34, 37, 40, 43, 46, 49, 51, 52, 72, 79, 80, 81, 82, 85, 90, 93, 96, 101, 104, 105, 107, 108, 109, 110, 111, 116, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 143,]
missed_lines = [ 73, 77, 106, 112, 113,]

[input_info]
test_file_path = "tests/units/components/core/test_debounce.py"
focal_file_path = "reflex/components/core/debounce.py"
test_file_url = "https://github.com/reflex-dev/reflex/blob/7acc7d9bb472d6e3a0e9df64bcbc5019d66fc788/tests/units/components/core/test_debounce.py"
focal_file_url = "https://github.com/reflex-dev/reflex/blob/7acc7d9bb472d6e3a0e9df64bcbc5019d66fc788/reflex/components/core/debounce.py"
first_commit_date = "2023-12-21"
last_commit_date = "2025-06-13"
test_file_content = "\"\"\"Test that DebounceInput collapses nested forms.\"\"\"\n\nimport pytest\n\nimport reflex as rx\nfrom reflex.components.core.debounce import DEFAULT_DEBOUNCE_TIMEOUT\nfrom reflex.state import BaseState\nfrom reflex.vars.base import LiteralVar, Var\n\ndef test_create_no_on_change():\n    \"\"\"DebounceInput raises ValueError if child has no on_change handler.\"\"\"\n    with pytest.raises(ValueError):\n        _ = rx.debounce_input(rx.input())\n\nclass S(BaseState):\n    \"\"\"Example state for debounce tests.\"\"\"\n\n    value: str = \"\"\n\n    @rx.event\n    def on_change(self, v: str):\n        \"\"\"Dummy on_change handler.\n\n        Args:\n            v: The changed value.\n        \"\"\"\n\ndef test_render_with_key():\n    tag = rx.debounce_input(\n        rx.input(\n            on_change=S.on_change,\n            key=\"foo_bar\",\n        )\n    )._render()\n    assert isinstance(tag.props[\"key\"], rx.vars.Var)\n    assert \"foo_bar\" in str(tag.props[\"key\"])\n\ndef test_render_with_special_props():\n    special_prop = Var(_js_expr=\"{foo_bar}\")\n    tag = rx.debounce_input(\n        rx.input(\n            on_change=S.on_change,\n            special_props=[special_prop],\n        )\n    )._render()\n    assert len(tag.special_props) == 1\n    assert next(iter(tag.special_props)).equals(special_prop)\n"
