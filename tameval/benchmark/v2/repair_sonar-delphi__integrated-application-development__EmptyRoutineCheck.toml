[meta]
task = "repair"
scenario = "repair_missed_asserts"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "integrated-application-development/sonar-delphi"
sha = "ae21dc4c487d8572ed20419cbdda4789f5ae289c"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl delphi-checks -Dtest=EmptyRoutineCheckTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl delphi-checks -DtargetClasses=**.EmptyRoutineCheck  -DtargetTests=**.EmptyRoutineCheckTest  -DoutputFormats=XML"
coverage_report_path = "delphi-checks/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "delphi-checks/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 0.0
original_coverage = 100.0
mutation_kill_rate = 0
original_mutation_kill_rate = 0.0
covered_lines = []
missed_lines = []

[input_info]
test_file_path = "delphi-checks/src/test/java/au/com/integradev/delphi/checks/EmptyRoutineCheckTest.java"
focal_file_path = "delphi-checks/src/main/java/au/com/integradev/delphi/checks/EmptyRoutineCheck.java"
test_file_url = "https://github.com/integrated-application-development/sonar-delphi/blob/ae21dc4c487d8572ed20419cbdda4789f5ae289c/delphi-checks/src/test/java/au/com/integradev/delphi/checks/EmptyRoutineCheckTest.java"
focal_file_url = "https://github.com/integrated-application-development/sonar-delphi/blob/ae21dc4c487d8572ed20419cbdda4789f5ae289c/delphi-checks/src/main/java/au/com/integradev/delphi/checks/EmptyRoutineCheck.java"
first_commit_date = "2023-11-13"
last_commit_date = "2025-01-21"
test_file_content = "\npackage au.com.integradev.delphi.checks;\n\nimport au.com.integradev.delphi.builders.DelphiTestUnitBuilder;\nimport au.com.integradev.delphi.checks.verifier.CheckVerifier;\nimport org.junit.jupiter.api.Test;\n\nclass EmptyRoutineCheckTest {\n  @Test\n  void testNonEmptyRoutinesShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TEmptyProcs = class(TObject)\")\n                .appendDecl(\"  public\")\n                .appendDecl(\"    procedure One;\")\n                .appendDecl(\"    procedure Two;\")\n                .appendDecl(\"    procedure Three;\")\n                .appendDecl(\"  end;\")\n                .appendImpl(\"procedure TEmptyProcs.One;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"  WriteLn('OK');\")\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TEmptyProcs.Two;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"  WriteLn('OK');\")\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TEmptyProcs.Three;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"  WriteLn('OK');\")\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure GlobalProcedureFour;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"  WriteLn('OK');\")\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TNonexistentType.ProcedureFive;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"  WriteLn('OK');\")\n                .appendImpl(\"end;\"))\n        .verifyNoIssues();\n  }\n\n  @Test\n  void testEmptyRoutinesShouldAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TEmptyProcs = class(TObject)\")\n                .appendDecl(\"  public\")\n                .appendDecl(\"    procedure One;\")\n                .appendDecl(\"    procedure Two;\")\n                .appendDecl(\"    procedure Three;\")\n                .appendDecl(\"    procedure Four;\")\n                .appendDecl(\"    procedure Five;\")\n                .appendDecl(\"  end;\")\n                .appendImpl(\"procedure TEmptyProcs.One;\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TEmptyProcs.Two;\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TEmptyProcs.Three;\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure GlobalProcedureFour;\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TNonexistentType.ProcedureFive;\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\"))\n        .verifyIssues();\n  }\n\n  @Test\n  void testEmptyExceptionalRoutinesWithoutCommentsShouldAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TEmptyProcs = class(TObject)\")\n                .appendDecl(\"    type\")\n                .appendDecl(\"      TNestedType<T> = class(TNestedTypeBase)\")\n                .appendDecl(\"        public\")\n                .appendDecl(\"          procedure NestedOverride<T>; override;\")\n                .appendDecl(\"      end;\")\n                .appendDecl(\"  public\")\n                .appendDecl(\"    procedure OverrideProc; override;\")\n                .appendDecl(\"    procedure VirtualProc; virtual;\")\n                .appendDecl(\"  end;\")\n                .appendImpl(\"procedure TEmptyProcs.OverrideProc;\n                .appendImpl(\"begin\")\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TEmptyProcs.VirtualProc;\n                .appendImpl(\"begin\")\n                .appendImpl(\"end;\")\n                .appendImpl(\n                    \"procedure TEmptyProcs.TTestedType<T>.NestedOverride<T>;\n                .appendImpl(\"begin\")\n                .appendImpl(\"end;\"))\n        .verifyIssues();\n  }\n\n  @Test\n  void testEmptyExceptionalRoutinesWithCommentsShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TEmptyProcs = class(TObject)\")\n                .appendDecl(\"    type\")\n                .appendDecl(\"      TNestedType<T> = class(TNestedTypeBase)\")\n                .appendDecl(\"        public\")\n                .appendDecl(\"          procedure NestedOverride<T>; override;\")\n                .appendDecl(\"      end;\")\n                .appendDecl(\"  public\")\n                .appendDecl(\"    procedure OverrideProc; override;\")\n                .appendDecl(\"    procedure VirtualProc; virtual;\")\n                .appendDecl(\"  end;\")\n                .appendImpl(\"procedure TEmptyProcs.OverrideProc;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TEmptyProcs.VirtualProc;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\")\n                .appendImpl(\"procedure TEmptyProcs.TNestedType<T>.NestedOverride<T>;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\"))\n        .verifyNoIssues();\n  }\n\n  @Test\n  void testForwardTypeDeclarationShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TEmptyProcs = class;\n                .appendDecl(\"  TEmptyProcs = class(TObject)\")\n                .appendDecl(\"  public\")\n                .appendDecl(\"    procedure VirtualProc; virtual;\")\n                .appendDecl(\"  end;\")\n                .appendImpl(\"procedure TEmptyProcs.VirtualProc;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\"))\n        .verifyNoIssues();\n  }\n\n  @Test\n  void testOverloadedMethodShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TEmptyProcs = class(TObject)\")\n                .appendDecl(\"  public\")\n                .appendDecl(\n                    \"    procedure VirtualProc(MyArg: String; MyOtherArg: Boolean); overload;\")\n                .appendDecl(\n                    \"    procedure VirtualProc(Arg1: String; Arg2: String); overload; virtual;\")\n                .appendDecl(\"  end;\")\n                .appendImpl(\n                    \"procedure TEmptyProcs.VirtualProc(FirstName: String; LastName: String);\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\"))\n        .verifyNoIssues();\n  }\n\n  @Test\n  void testEmptyAnonymousMethodWithoutCommentShouldAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TProc = reference to procedure;\")\n                .appendImpl(\"procedure Foo;\")\n                .appendImpl(\"var\")\n                .appendImpl(\"  Bar: TProc;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"  Bar :=\")\n                .appendImpl(\"    procedure\n                .appendImpl(\"    begin\")\n                .appendImpl(\"    end;\")\n                .appendImpl(\"end;\"))\n        .verifyIssues();\n  }\n\n  @Test\n  void testEmptyAnonymousMethodWithCommentShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  TProc = reference to procedure;\")\n                .appendImpl(\"procedure Foo;\")\n                .appendImpl(\"var\")\n                .appendImpl(\"  Bar: TProc;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"  Bar :=\")\n                .appendImpl(\"    procedure\")\n                .appendImpl(\"    begin\")\n                .appendImpl(\"\n                .appendImpl(\"    end;\")\n                .appendImpl(\"end;\"))\n        .verifyNoIssues();\n  }\n\n  @Test\n  void testForwardDeclarationShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendImpl(\"procedure ForwardProc(FirstName: String; LastName: String); forward;\"))\n        .verifyNoIssues();\n  }\n\n  @Test\n  void testExternalImplementationShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendImpl(\n                    \"procedure ExternalProc(FirstName: String; LastName: String); external;\"))\n        .verifyNoIssues();\n  }\n\n  @Test\n  void testInterfaceImplementationShouldNotAddIssue() {\n    CheckVerifier.newVerifier()\n        .withCheck(new EmptyRoutineCheck())\n        .onFile(\n            new DelphiTestUnitBuilder()\n                .appendDecl(\"type\")\n                .appendDecl(\"  IFoo = interface\")\n                .appendDecl(\"    procedure Bar;\")\n                .appendDecl(\"  end;\")\n                .appendDecl(\"  TFoo = class(TObject, IFoo)\")\n                .appendDecl(\"    procedure Bar;\")\n                .appendDecl(\"  end;\")\n                .appendImpl(\"procedure TFoo.Bar;\")\n                .appendImpl(\"begin\")\n                .appendImpl(\"\n                .appendImpl(\"end;\"))\n        .verifyNoIssues();\n  }\n}"
