[meta]
task = "update"
scenario = "update_test"

[lang_info]
lang = "Go"
go_version = "1.22"

[repo_info]
repository = "secretflow/kuscia"
sha = "5386c4265acf18857c87aa008d13bb6fda2d828e"

[run_info]
docker_image = "golang:1.23.0"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "go mod download && go install github.com/zimmski/go-mutesting/cmd/go-mutesting@latest && go install github.com/jstemmer/go-junit-report@latest"
test_run_command = "go test -v -failfast -coverprofile=coverage.out pkg/utils/common/template.go pkg/utils/common/template_test.go 2>&1 && go tool cover -func=coverage.out"
mutation_run_command = "timeout {timeout} go-mutesting pkg/utils/common/template.go"
coverage_report_path = "coverage.out"
coverage_report_type = "go_cover"
mutation_report_path = "mutation_report.txt"
mutation_report_type = "go-mutesting"

[coverage]
coverage = 9.0
original_coverage = 55.0
mutation_kill_rate = nan
original_mutation_kill_rate = nan
covered_lines = [ 60, 61, 66, 74, 212, 213, 214, 215, 216, 217, 218, 219,]
missed_lines = [ 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207,]

[input_info]
test_file_path = "pkg/utils/common/template_test.go"
focal_file_path = "pkg/utils/common/template.go"
test_file_url = "https://github.com/secretflow/kuscia/blob/5386c4265acf18857c87aa008d13bb6fda2d828e/pkg/utils/common/template_test.go"
focal_file_url = "https://github.com/secretflow/kuscia/blob/5386c4265acf18857c87aa008d13bb6fda2d828e/pkg/utils/common/template.go"
first_commit_date = "2023-09-06"
last_commit_date = "2025-02-19"
test_file_content = "// Copyright 2023 Ant Group Co., Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage common\n\nimport (\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"gotest.tools/v3/assert\"\n\trbacv1 \"k8s.io/api/rbac/v1\"\n\n\t\"github.com/secretflow/kuscia/pkg/utils/nlog\"\n)\n\nfunc TestRanderObject(t *testing.T) {\n\tworkDir := GetWorkDir()\n\ttmpPath := filepath.Join(workDir, \"etc/conf/domain-namespace-res.yaml\")\n\trole := &rbacv1.Role{}\n\tinput := struct {\n\t\tDomainID string\n\t}{\n\t\tDomainID: \"alice\",\n\t}\n\terr := RenderRuntimeObject(tmpPath, role, input)\n\tassert.NilError(t, err)\n}\n\nfunc GetWorkDir() string {\n\t_, filename, _, _ := runtime.Caller(0)\n\tnlog.Infof(\"path is %s\", filename)\n\treturn strings.SplitN(filename, \"pkg\", 2)[0]\n}"
