[meta]
task = "create"
scenario = "add_new_test"

[lang_info]
lang = "Java"
java_builder = "Maven"
is_multi_module = true

[repo_info]
repository = "cqframework/clinical-reasoning"
sha = "1fed1a804b28ac47966530908e41cb26f6e82472"

[run_info]
docker_image = "maven:3.8.3-openjdk-17"
volumes_to_mount = [ "{proj_path}:/app", "{host}/.m2:/.m2", "{host}/.cache/pip:/.pip_cache", "{host}/.cache/go-build:/.go_cache", "{proj_path}/_HOME_/go:/go",]
docker_wrap = "sudo docker run --rm -w /app -v {proj_path}:/app -v {host}/.m2:/.m2 -v {host}/.cache/pip:/.pip_cache -v {host}/.cache/go-build:/.go_cache -v {proj_path}/_HOME_/go:/go {img} sh -c '{cmd}'"
env = []
prebuild_command = "mvn -Dmaven.repo.local=/.m2 -T 4 clean install"
test_run_command = "mvn clean -Dmaven.repo.local=/.m2 test -q -pl cqf-fhir-cr-hapi -Dtest=CdsCrServiceMethodTest && mvn jacoco:report -Djacoco.append=false"
mutation_run_command = "mvn -Dmaven.repo.local=/.m2 org.pitest:pitest-maven:mutationCoverage -pl cqf-fhir-cr-hapi -DtargetClasses=**.CdsCrServiceMethod  -DtargetTests=**.CdsCrServiceMethodTest  -DoutputFormats=XML"
coverage_report_path = "cqf-fhir-cr-hapi/target/site/jacoco/jacoco.xml"
coverage_report_type = "jacoco"
mutation_report_path = "cqf-fhir-cr-hapi/target/pit-reports/mutations.xml"
mutation_report_type = "pitest"

[coverage]
coverage = 78.0
original_coverage = 100.0
mutation_kill_rate = 0.0
original_mutation_kill_rate = 0.0
covered_lines = [ 12, 13, 17, 18, 19, 20, 30,]
missed_lines = [ 24, 34,]

[input_info]
test_file_path = "cqf-fhir-cr-hapi/src/test/java/org/opencds/cqf/fhir/cr/hapi/cdshooks/CdsCrServiceMethodTest.java"
focal_file_path = "cqf-fhir-cr-hapi/src/main/java/org/opencds/cqf/fhir/cr/hapi/cdshooks/CdsCrServiceMethod.java"
test_file_url = "https://github.com/cqframework/clinical-reasoning/blob/1fed1a804b28ac47966530908e41cb26f6e82472/cqf-fhir-cr-hapi/src/test/java/org/opencds/cqf/fhir/cr/hapi/cdshooks/CdsCrServiceMethodTest.java"
focal_file_url = "https://github.com/cqframework/clinical-reasoning/blob/1fed1a804b28ac47966530908e41cb26f6e82472/cqf-fhir-cr-hapi/src/main/java/org/opencds/cqf/fhir/cr/hapi/cdshooks/CdsCrServiceMethod.java"
first_commit_date = "2025-03-14"
last_commit_date = "2025-06-21"
test_file_content = "package org.opencds.cqf.fhir.cr.hapi.cdshooks;\n\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.mockito.Mockito.times;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.Mockito.when;\n\nimport ca.uhn.fhir.model.api.IModelJson;\nimport ca.uhn.fhir.rest.api.server.cdshooks.CdsServiceRequestJson;\nimport ca.uhn.hapi.fhir.cdshooks.api.json.CdsServiceJson;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.jupiter.MockitoExtension;\n\n@ExtendWith(MockitoExtension.class)\nclass CdsCrServiceMethodTest {\n\n    private final CdsServiceJson cdsServiceJson = new CdsServiceJson();\n    private final String serviceId = \"serviceId\";\n\n    @Mock\n    private ICdsCrServiceFactory cdsCrServiceFactory;\n\n    @Mock\n    private ICdsCrService cdsCrService;\n\n    private CdsCrServiceMethod testSubject;\n\n    @BeforeEach\n    void beforeEach() {\n        testSubject = new CdsCrServiceMethod(cdsServiceJson, cdsCrServiceFactory);\n    }\n\n\n\n\n    @Test\n    void testisAllowAutoFhirClientPrefetch() {\n        assertThat(testSubject.isAllowAutoFhirClientPrefetch()).isTrue();\n    }\n}\n"
